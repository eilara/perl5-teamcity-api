{
  "typemap": {
    "agent-requirement": {
      "id": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "disabled": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "boolean"
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0",
        "from": "propEntity"
      },
      "name": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "type": {
        "from": "propEntity",
        "type": "string",
        "is_attribute": 1
      }
    },
    "feature": {
      "id": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "type": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "disabled": {
        "from": "propEntity",
        "type": "boolean",
        "is_attribute": 1
      },
      "name": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "minOccurs": "0",
        "from": "propEntity",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "artifact-dependencies": {
      "artifact-dependency": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "plugin": {
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "loadPath": {
        "is_attribute": 1,
        "type": "string"
      },
      "parameters": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "displayName": {
        "is_attribute": 1,
        "type": "string"
      },
      "version": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "group": {
      "roles": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "parent-groups": {
        "minOccurs": "0",
        "type": "groups",
        "is_sequence": 1
      },
      "child-groups": {
        "minOccurs": "0",
        "type": "groups",
        "is_sequence": 1
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "description": {
        "type": "string",
        "is_attribute": 1
      },
      "key": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "users": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "features": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "feature": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      }
    },
    "role": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "roleId": {
        "type": "string",
        "is_attribute": 1
      },
      "scope": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "comment": {
      "timestamp": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "text": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      }
    },
    "property": {
      "value": {
        "is_attribute": 1,
        "type": "string"
      },
      "own": {
        "type": "boolean",
        "is_attribute": 1
      },
      "type": {
        "is_sequence": 1,
        "type": "parameterType",
        "minOccurs": "0"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "snapshot-dependency": {
      "disabled": {
        "from": "propEntity",
        "type": "boolean",
        "is_attribute": 1
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0",
        "from": "propEntity"
      },
      "type": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "name": {
        "from": "propEntity",
        "type": "string",
        "is_attribute": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "string",
        "from": "propEntity"
      },
      "source-buildType": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "buildType"
      }
    },
    "buildType": {
      "vcs-root-entries": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "steps": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "projectName": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "uuid": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "projectId": {
        "type": "string",
        "is_attribute": 1
      },
      "investigations": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "internalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      },
      "builds": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "parameters": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "features": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "triggers": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "snapshot-dependencies": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "template": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "buildType"
      },
      "agent-requirements": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "project": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "settings": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "artifact-dependencies": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "paused": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "projectInternalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "description": {
        "type": "string",
        "is_attribute": 1
      },
      "templateFlag": {
        "is_attribute": 1,
        "type": "boolean"
      }
    },
    "plugins": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "plugin": {
        "is_ref": 1,
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      }
    },
    "triggeredBy": {
      "rawValue": {
        "type": "string",
        "is_attribute": 1
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "details": {
        "type": "string",
        "is_attribute": 1
      },
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "buildType": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "date": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "agentPool": {
      "projects": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "agents": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "issues": {
      "issue": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "type": "issue",
        "is_sequence": 1
      }
    },
    "investigations": {
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "investigation": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "test": {
      "mutes": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "testOccurrences": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "investigations": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "vcs-root": {
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "lastChecked": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "uuid": {
        "type": "string",
        "is_attribute": 1
      },
      "project": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "modificationCheckInterval": {
        "is_attribute": 1,
        "type": "int"
      },
      "vcsRootInstances": {
        "minOccurs": "0",
        "type": "vcs-root-instances",
        "is_sequence": 1
      },
      "internalId": {
        "is_attribute": 1,
        "type": "long"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcsName": {
        "type": "string",
        "is_attribute": 1
      },
      "status": {
        "type": "string",
        "is_attribute": 1
      },
      "projectLocator": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "revision": {
      "version": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcs-root-instance": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "internalVersion": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "revisions": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "revision": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "type": "revision"
      }
    },
    "fileChanges": {
      "file": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "type": "fileChange",
        "minOccurs": "0"
      }
    },
    "problemScope": {
      "project": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "buildTypes": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "buildType": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "problems": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "problem": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "steps": {
      "step": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "vcs-roots": {
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcs-root": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      }
    },
    "vcs-root-instance": {
      "projectLocator": {
        "type": "string",
        "is_attribute": 1
      },
      "vcs-root": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "vcsName": {
        "type": "string",
        "is_attribute": 1
      },
      "lastVersionInternal": {
        "type": "string",
        "is_attribute": 1
      },
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "vcsRootInternalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "lastVersion": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "vcs-root-id": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "lastChecked": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "problemOccurrences": {
      "problemOccurrence": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0",
        "is_ref": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "muted": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "failed": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "passed": {
        "is_attribute": 1,
        "type": "int",
        "from": "occurrencesSummary"
      },
      "newFailed": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "ignored": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "buildTypes": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildType": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "files": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "file": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "problemOccurrence": {
      "build": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "currentlyMuted": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "mute": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "mute"
      },
      "currentlyInvestigated": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "identity": {
        "is_attribute": 1,
        "type": "string"
      },
      "problem": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "details": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "additionalData": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      },
      "muted": {
        "type": "boolean",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "problem": {
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "identity": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "mutes": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "problemOccurrences": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "investigations": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "buildCancelRequest": {
      "readdIntoQueue": {
        "type": "boolean",
        "is_attribute": 1
      },
      "comment": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "groups": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "group": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      }
    },
    "file": {
      "parent": {
        "type": "file-ref",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "content": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1,
        "from": "file-ref"
      },
      "modificationTime": {
        "is_attribute": 1,
        "type": "string"
      },
      "size": {
        "type": "long",
        "is_attribute": 1
      },
      "children": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "name": {
        "from": "file-ref",
        "is_attribute": 1,
        "type": "string"
      }
    },
    "server": {
      "buildQueue": {
        "type": "href",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "agentPools": {
        "type": "href",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "buildDate": {
        "type": "string",
        "is_attribute": 1
      },
      "versionMajor": {
        "type": "byte",
        "is_attribute": 1
      },
      "startTime": {
        "type": "string",
        "is_attribute": 1
      },
      "internalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "builds": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "href"
      },
      "buildNumber": {
        "is_attribute": 1,
        "type": "string"
      },
      "currentTime": {
        "is_attribute": 1,
        "type": "string"
      },
      "projects": {
        "type": "href",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "version": {
        "is_attribute": 1,
        "type": "string"
      },
      "versionMinor": {
        "is_attribute": 1,
        "type": "byte"
      },
      "users": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "vcsRoots": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "userGroups": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "agents": {
        "minOccurs": "0",
        "type": "href",
        "is_sequence": 1
      }
    },
    "issue": {
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "url": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "builds": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "build": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      }
    },
    "progress-info": {
      "elapsedSeconds": {
        "type": "long",
        "is_attribute": 1
      },
      "currentStageText": {
        "type": "string",
        "is_attribute": 1
      },
      "percentageComplete": {
        "is_attribute": 1,
        "type": "int"
      },
      "probablyHanging": {
        "type": "boolean",
        "is_attribute": 1
      },
      "estimatedTotalSeconds": {
        "type": "long",
        "is_attribute": 1
      },
      "outdated": {
        "is_attribute": 1,
        "type": "boolean"
      }
    },
    "issuesUsages": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "issueUsage": {
        "is_sequence": 1,
        "type": "issueUsage",
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      }
    },
    "user": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "username": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "lastLogin": {
        "type": "string",
        "is_attribute": 1
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      },
      "password": {
        "is_attribute": 1,
        "type": "string"
      },
      "roles": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "email": {
        "type": "string",
        "is_attribute": 1
      },
      "groups": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "realm": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "tags": {
      "tag": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "branch": {
      "unspecified": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "default": {
        "is_attribute": 1,
        "type": "boolean"
      }
    },
    "roles": {
      "role": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "entries": {
      "entry": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0",
        "is_ref": 1
      },
      "count": {
        "type": "long",
        "is_attribute": 1
      }
    },
    "resolution": {
      "time": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "fileChange": {
      "relative-file": {
        "type": "string",
        "is_attribute": 1
      },
      "before-revision": {
        "is_attribute": 1,
        "type": "string"
      },
      "after-revision": {
        "type": "string",
        "is_attribute": 1
      },
      "file": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "tag": {
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "owner": {
        "is_sequence": 1,
        "type": "user",
        "minOccurs": "0"
      },
      "private": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "build": {
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      },
      "percentageComplete": {
        "type": "int",
        "is_attribute": 1
      },
      "history": {
        "type": "boolean",
        "is_attribute": 1
      },
      "taskId": {
        "type": "long",
        "is_attribute": 1
      },
      "changes": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "unspecifiedBranch": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "triggered": {
        "type": "triggeredBy",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "problemOccurrences": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "statistics": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "triggeringOptions": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "buildTriggeringOptions"
      },
      "state": {
        "type": "string",
        "is_attribute": 1
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "personal": {
        "type": "boolean",
        "is_attribute": 1
      },
      "relatedIssues": {
        "minOccurs": "0",
        "type": "issuesUsages",
        "is_sequence": 1
      },
      "pinned": {
        "type": "boolean",
        "is_attribute": 1
      },
      "buildTypeId": {
        "is_attribute": 1,
        "type": "string"
      },
      "defaultBranch": {
        "type": "boolean",
        "is_attribute": 1
      },
      "startEstimate": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      },
      "tags": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "user": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "finishDate": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "queuedDate": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      },
      "statusText": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "buildTypeInternalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildType": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "startDate": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "snapshot-dependencies": {
        "is_sequence": 1,
        "type": "builds",
        "minOccurs": "0"
      },
      "agent": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "comment": {
        "minOccurs": "0",
        "type": "comment",
        "is_sequence": 1
      },
      "artifact-dependencies": {
        "is_sequence": 1,
        "type": "builds",
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "running-info": {
        "is_sequence": 1,
        "type": "progress-info",
        "minOccurs": "0"
      },
      "custom-artifact-dependencies": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "artifact-dependencies"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "canceledInfo": {
        "type": "comment",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "lastChanges": {
        "minOccurs": "0",
        "type": "changes",
        "is_sequence": 1
      },
      "artifacts": {
        "is_sequence": 1,
        "type": "files",
        "minOccurs": "0"
      },
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "testOccurrences": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "attributes": {
        "is_sequence": 1,
        "type": "entries",
        "minOccurs": "0"
      },
      "number": {
        "is_attribute": 1,
        "type": "string"
      },
      "revisions": {
        "type": "revisions",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "compatibleAgents": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "agents"
      },
      "branchName": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      },
      "running": {
        "type": "boolean",
        "is_attribute": 1
      },
      "waitReason": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "pinInfo": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "comment"
      }
    },
    "testOccurrence": {
      "ignored": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "firstFailed": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "testOccurrence"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "details": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "nextFixed": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "testOccurrence"
      },
      "currentlyInvestigated": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "mute": {
        "type": "mute",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "currentlyMuted": {
        "type": "boolean",
        "is_attribute": 1
      },
      "build": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "muted": {
        "type": "boolean",
        "is_attribute": 1
      },
      "duration": {
        "type": "int",
        "is_attribute": 1
      },
      "ignoreDetails": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "test": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      }
    },
    "href": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "branches": {
      "branch": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0",
        "is_ref": 1
      }
    },
    "mutes": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "mute": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "mute",
        "maxOccurs": "unbounded"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "entry": {
      "value": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "agentPools": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "agentPool": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "snapshot-dependencies": {
      "snapshot-dependency": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "agent": {
      "enabled": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "properties": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "authorized": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "locator": {
        "type": "string",
        "is_attribute": 1
      },
      "typeId": {
        "is_attribute": 1,
        "type": "int"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "pool": {
        "type": "agentPool",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "uptodate": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "id": {
        "type": "int",
        "is_attribute": 1
      },
      "ip": {
        "type": "string",
        "is_attribute": 1
      },
      "connected": {
        "is_attribute": 1,
        "type": "boolean"
      }
    },
    "agent-requirements": {
      "agent-requirement": {
        "is_ref": 1,
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "change": {
      "comment": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "is_attribute": 1,
        "type": "long"
      },
      "username": {
        "type": "string",
        "is_attribute": 1
      },
      "files": {
        "is_sequence": 1,
        "type": "fileChanges",
        "minOccurs": "0"
      },
      "version": {
        "type": "string",
        "is_attribute": 1
      },
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcsRootInstance": {
        "is_sequence": 1,
        "type": "vcs-root-instance",
        "minOccurs": "0"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "personal": {
        "type": "boolean",
        "is_attribute": 1
      },
      "webUrl": {
        "is_attribute": 1,
        "type": "string"
      },
      "date": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "projects": {
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "project": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "newBuildTypeDescription": {
      "vcsRootsIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "from": "copyOptionsDescription",
        "minOccurs": "0"
      },
      "projectsIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0",
        "from": "copyOptionsDescription"
      },
      "buildTypesIdsMap": {
        "from": "copyOptionsDescription",
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "sourceBuildTypeLocator": {
        "type": "string",
        "is_attribute": 1
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "copyAllAssociatedSettings": {
        "type": "boolean",
        "is_attribute": 1,
        "from": "copyOptionsDescription"
      },
      "sourceBuildType": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "buildType"
      }
    },
    "file-ref": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "buildTriggeringOptions": {
      "cleanSources": {
        "type": "boolean",
        "is_attribute": 1
      },
      "rebuildAllDependencies": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "rebuildDependencies": {
        "minOccurs": "0",
        "type": "buildTypes",
        "is_sequence": 1
      },
      "queueAtTop": {
        "is_attribute": 1,
        "type": "boolean"
      }
    },
    "testOccurrences": {
      "failed": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "passed": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "testOccurrence": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      },
      "newFailed": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "ignored": {
        "is_attribute": 1,
        "type": "int",
        "from": "occurrencesSummary"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "muted": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "investigation": {
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "assignment": {
        "minOccurs": "0",
        "type": "comment",
        "is_sequence": 1
      },
      "responsible": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "user"
      },
      "target": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "problemTarget"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "state": {
        "is_attribute": 1,
        "type": "string"
      },
      "resolution": {
        "type": "resolution",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "assignee": {
        "type": "user",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "scope": {
        "is_sequence": 1,
        "type": "problemScope",
        "minOccurs": "0"
      }
    },
    "agents": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "agent": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "items": {
      "item": {
        "maxOccurs": "unbounded",
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "copyOptionsDescription": {
      "copyAllAssociatedSettings": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "buildTypesIdsMap": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "vcsRootsIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "projectsIdsMap": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "properties"
      }
    },
    "vcsLabeling": {
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "labelName": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsRoots": {
        "is_sequence": 1,
        "type": "vcs-roots",
        "minOccurs": "0"
      },
      "branchFilter": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      }
    },
    "vcs-root-instances": {
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "vcs-root-instance": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "vcs-root-entry": {
      "checkout-rules": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "vcs-root": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "issueUsage": {
      "changes": {
        "minOccurs": "0",
        "type": "changes",
        "is_sequence": 1
      },
      "issue": {
        "type": "issue",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "triggers": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "trigger": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      }
    },
    "project": {
      "parentProjectInternalId": {
        "type": "string",
        "is_attribute": 1
      },
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      },
      "internalId": {
        "type": "string",
        "is_attribute": 1
      },
      "parameters": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "archived": {
        "type": "boolean",
        "is_attribute": 1
      },
      "templates": {
        "is_sequence": 1,
        "type": "buildTypes",
        "minOccurs": "0"
      },
      "parentProject": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "project"
      },
      "description": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "parentProjectName": {
        "type": "string",
        "is_attribute": 1
      },
      "buildTypes": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "parentProjectId": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcsRoots": {
        "type": "vcs-roots",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "uuid": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "projects": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "problemTarget": {
      "problems": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "tests": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "anyProblem": {
        "is_attribute": 1,
        "type": "boolean"
      }
    },
    "changes": {
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "change": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "occurrencesSummary": {
      "passed": {
        "is_attribute": 1,
        "type": "int"
      },
      "failed": {
        "type": "int",
        "is_attribute": 1
      },
      "newFailed": {
        "is_attribute": 1,
        "type": "int"
      },
      "ignored": {
        "is_attribute": 1,
        "type": "int"
      },
      "muted": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "tests": {
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "test": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0",
        "is_ref": 1
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "step": {
      "id": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "disabled": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "boolean"
      },
      "type": {
        "is_attribute": 1,
        "type": "string",
        "from": "propEntity"
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "from": "propEntity",
        "minOccurs": "0"
      },
      "name": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      }
    },
    "parameterType": {
      "rawValue": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "artifact-dependency": {
      "id": {
        "from": "propEntity",
        "type": "string",
        "is_attribute": 1
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0",
        "from": "propEntity"
      },
      "type": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "disabled": {
        "from": "propEntity",
        "type": "boolean",
        "is_attribute": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string",
        "from": "propEntity"
      },
      "source-buildType": {
        "minOccurs": "0",
        "type": "buildType",
        "is_sequence": 1
      }
    },
    "newProjectDescription": {
      "vcsRootsIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "from": "copyOptionsDescription",
        "minOccurs": "0"
      },
      "projectsIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0",
        "from": "copyOptionsDescription"
      },
      "sourceProject": {
        "is_sequence": 1,
        "type": "project",
        "minOccurs": "0"
      },
      "parentProject": {
        "type": "project",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "buildTypesIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0",
        "from": "copyOptionsDescription"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "copyAllAssociatedSettings": {
        "is_attribute": 1,
        "type": "boolean",
        "from": "copyOptionsDescription"
      },
      "sourceProjectLocator": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "propEntity": {
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "type": {
        "type": "string",
        "is_attribute": 1
      },
      "disabled": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "users": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "user": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "trigger": {
      "id": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "name": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "disabled": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "boolean"
      },
      "type": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "from": "propEntity",
        "is_sequence": 1
      }
    },
    "mute": {
      "resolution": {
        "type": "resolution",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "type": "int",
        "is_attribute": 1
      },
      "assignment": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "comment"
      },
      "target": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "problemTarget"
      },
      "scope": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "problemScope"
      }
    },
    "properties": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "property": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "vcs-root-entries": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "vcs-root-entry": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      }
    }
  },
  "entities": {
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}/{field}": {
      "methods": {
        "setInstanceField": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "serveInstanceField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}/parameters": {
      "methods": {
        "getStepParameters": {
          "GET": {
            "response": "properties",
            "param": {
              "fields": "string"
            }
          }
        },
        "replaceStepParameters": {
          "PUT": {
            "param": {
              "fields": "string"
            },
            "response": "properties",
            "request": "properties"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-instances": {
      "methods": {
        "getCurrentVcsInstances": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "doc": "Experimental support only!",
            "response": "vcs-root-instances"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/aliases": {
      "methods": {
        "getAliases": {
          "GET": {
            "response": "items",
            "doc": "Experimental support only"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/server": {
      "methods": {
        "serveServerInfo": {
          "GET": {
            "response": "server"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}": {
      "methods": {
        "replaceFeature": {
          "PUT": {
            "param": {
              "fields": "string"
            },
            "response": "feature",
            "request": "feature"
          }
        },
        "getFeature": {
          "GET": {
            "response": "feature",
            "param": {
              "fields": "string"
            }
          }
        },
        "deleteFeature": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/roles": {
      "methods": {
        "listRoles": {
          "GET": {
            "response": "roles"
          }
        },
        "addRolePut": {
          "PUT": {
            "response": "roles",
            "request": "roles"
          }
        },
        "addRole": {
          "POST": {
            "request": "role",
            "response": "role"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/cctray": {
      "methods": {
        "serveProjectsConvenienceCopy": {
          "GET": {
            "param": {
              "locator": "string"
            },
            "response": "Projects"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/{field}": {
      "methods": {
        "serveBuildFieldByBuildOnly": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}": {
      "methods": {
        "serveBuildType": {
          "GET": {
            "response": "buildType",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/artifact-dependencies/{artifactDepLocator}": {
      "methods": {
        "deleteArtifactDep": {
          "DELETE": {}
        },
        "replaceArtifactDep": {
          "PUT": {
            "request": "artifact-dependency",
            "param": {
              "fields": "string"
            },
            "response": "artifact-dependency"
          }
        },
        "getArtifactDep": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "artifact-dependency"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/buildTypes": {
      "methods": {
        "getRelatedBuildTypes": {
          "GET": {
            "response": "buildTypes",
            "doc": "Experimental support only!",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/agent-requirements/{agentRequirementLocator}": {
      "methods": {
        "getAgentRequirement": {
          "GET": {
            "response": "agent-requirement",
            "param": {
              "fields": "string"
            }
          }
        },
        "replaceAgentRequirement": {
          "PUT": {
            "response": "agent-requirement",
            "param": {
              "fields": "string"
            },
            "request": "agent-requirement"
          }
        },
        "deleteAgentRequirement": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes": {
      "methods": {
        "createBuildType": {
          "POST": {
            "request": "newBuildTypeDescription",
            "response": "buildType",
            "doc": "Creates a new build configuration by copying existing one.",
            "param": {
              "fields": "string"
            }
          }
        },
        "createEmptyBuildType": {
          "POST": {
            "response": "buildType",
            "param": {
              "fields": "string"
            },
            "request": "text"
          }
        },
        "serveBuildTypesInProject": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "buildTypes"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifactsDirectory": {
      "methods": {
        "getArtifactsDirectory": {
          "GET": {
            "doc": "Experimental support only",
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/artifact-dependencies": {
      "methods": {
        "addArtifactDep": {
          "POST": {
            "param": {
              "fields": "string"
            },
            "response": "artifact-dependency",
            "request": "artifact-dependency"
          }
        },
        "replaceArtifactDeps": {
          "PUT": {
            "request": "artifact-dependencies",
            "doc": "Replaces the dependencies to those sent in the request.",
            "response": "artifact-dependencies",
            "param": {
              "fields": "string"
            }
          }
        },
        "getArtifactDeps": {
          "GET": {
            "response": "artifact-dependencies",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/server/plugins": {
      "methods": {
        "servePlugins": {
          "GET": {
            "response": "plugins",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/debug/memory/dumps": {
      "methods": {
        "saveMemoryDump": {
          "POST": {
            "param": {
              "archived": "boolean"
            },
            "doc": "Experimental use only!",
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/repositoryState": {
      "methods": {
        "deleteRepositoryState": {
          "DELETE": {}
        },
        "setRepositoryState": {
          "PUT": {
            "response": "entries",
            "request": "entries"
          }
        },
        "getRepositoryState": {
          "GET": {
            "response": "entries"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/statistics/{name}": {
      "methods": {
        "serveBuildStatisticValue": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/{projectLocator}/{btLocator}/{buildLocator}/{field}": {
      "methods": {
        "serveBuildFieldShort": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/{field}": {
      "methods": {
        "setInstanceField": {
          "PUT": {
            "response": "text",
            "request": "text"
          }
        },
        "serveInstanceField": {
          "GET": {
            "response": "text"
          }
        },
        "deleteInstanceField": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agents/{agentLocator}/{field}": {
      "methods": {
        "setAgentField": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "serveAgentField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/settings": {
      "methods": {
        "serveBuildTypeSettings": {
          "GET": {
            "response": "properties",
            "param": {
              "fields": "string"
            }
          }
        },
        "replaceBuildTypeSettings": {
          "PUT": {
            "request": "properties",
            "response": "properties",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/{field}": {
      "methods": {
        "setBuildTypeField": {
          "PUT": {
            "response": "text",
            "request": "text"
          }
        },
        "serveBuildTypeField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/debug/requestDetails": {
      "methods": {
        "getRequestDetails": {
          "GET": {
            "doc": "Experimental use only!",
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}": {
      "methods": {
        "serveInstance": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "vcs-root-instance"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}": {
      "methods": {
        "replaceStep": {
          "PUT": {
            "request": "step",
            "response": "step",
            "param": {
              "fields": "string"
            }
          }
        },
        "getStep": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "step"
          }
        },
        "deleteStep": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/groups": {
      "methods": {
        "getGroups": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "groups"
          }
        },
        "replaceGroups": {
          "PUT": {
            "doc": "Replaces user's roles with the submitted ones",
            "response": "groups",
            "param": {
              "fields": "string"
            },
            "request": "groups"
          }
        },
        "addGroup": {
          "POST": {
            "request": "group",
            "response": "group",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/tests": {
      "methods": {
        "getTests": {
          "GET": {
            "doc": "Experimental, the requests and results returned will change in future versions!",
            "response": "tests",
            "param": {
              "fields": "string",
              "locator": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots": {
      "methods": {
        "addRoot": {
          "POST": {
            "param": {
              "fields": "string"
            },
            "response": "vcs-root",
            "request": "vcs-root"
          }
        },
        "serveRoots": {
          "GET": {
            "param": {
              "fields": "string",
              "locator": "string"
            },
            "response": "vcs-roots"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest": {
      "methods": {
        "serveRoot": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-entries/{id}/checkout-rules": {
      "methods": {
        "updateVcsRootEntryCheckoutRules": {
          "PUT": {
            "response": "text",
            "request": "text"
          }
        },
        "getVcsRootEntryCheckoutRules": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs/files/latest/content{path:(/.*)?}": {
      "methods": {
        "getVcsFileContent": {
          "GET": {
            "doc": "Gets content of a file form VCS Experimental support only",
            "param": {
              "resolveParameters": "boolean"
            },
            "response": "any"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/repositoryState/creationDate": {
      "methods": {
        "getRepositoryStateCreationDate": {
          "GET": {
            "response": "any"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}": {
      "methods": {
        "deleteProject": {
          "DELETE": {}
        },
        "serveProject": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "project"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/builds/{buildLocator}": {
      "methods": {
        "serveBuildWithProject": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "build"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/properties/{name}": {
      "methods": {
        "removeUserProperty": {
          "DELETE": {}
        },
        "putUserProperty": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "serveUserProperties": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}/{fieldName}": {
      "methods": {
        "changeStepSetting": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "getStepSetting": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-entries": {
      "methods": {
        "getVcsRootEntries": {
          "GET": {
            "response": "vcs-root-entries",
            "param": {
              "fields": "string"
            }
          }
        },
        "addVcsRootEntry": {
          "POST": {
            "request": "vcs-root-entry",
            "response": "vcs-root-entry",
            "param": {
              "fields": "string"
            }
          }
        },
        "replaceVcsRootEntries": {
          "PUT": {
            "response": "vcs-root-entries",
            "param": {
              "fields": "string"
            },
            "request": "vcs-root-entries"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/resulting-properties/{propertyName}": {
      "methods": {
        "getParameter": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/debug/vcsCheckingForChangesQueue": {
      "methods": {
        "scheduleCheckingForChanges": {
          "POST": {
            "doc": "Experimental use only!",
            "response": "vcs-root-instances",
            "param": {
              "locator": "string",
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/newProjectDescription": {
      "methods": {
        "getExampleNewProjectDescriptionCompatibilityVersion1": {
          "GET": {
            "doc": "For compatibility with experimental feature of 8.0",
            "param": {
              "id": "string"
            },
            "response": "newProjectDescription"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/builds": {
      "methods": {
        "serveBuilds": {
          "GET": {
            "param": {
              "triggeredByUser": "string",
              "onlyPinned": "boolean",
              "agentName": "string",
              "includeCanceled": "boolean",
              "includePersonal": "boolean",
              "count": "int",
              "fields": "string",
              "sinceBuild": "string",
              "sinceDate": "string",
              "status": "string",
              "locator": "string",
              "start": "long",
              "tag": "string"
            },
            "doc": "Serves builds matching supplied condition.",
            "response": "builds"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}": {
      "methods": {
        "serveBuildTypeXML": {
          "GET": {
            "doc": "Serves build configuration or templates according to the locator.",
            "response": "buildType",
            "param": {
              "fields": "string"
            }
          }
        },
        "deleteBuildType": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/roles": {
      "methods": {
        "replaceRoles": {
          "PUT": {
            "request": "roles",
            "doc": "Replaces user's roles with the submitted ones",
            "response": "roles"
          }
        },
        "addRole": {
          "POST": {
            "request": "role",
            "response": "role"
          }
        },
        "listRoles": {
          "GET": {
            "response": "roles"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/{field}": {
      "methods": {
        "serveBuildTypeFieldWithProject": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/related-issues": {
      "methods": {
        "serveBuildRelatedIssuesOld": {
          "GET": {
            "response": "issuesUsages",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/firstBuilds": {
      "methods": {
        "getChangeFirstBuilds": {
          "GET": {
            "doc": "Experimental support only!",
            "response": "builds",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/properties/{name}": {
      "methods": {
        "putParameter": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "serveProperty": {
          "GET": {
            "response": "text"
          }
        },
        "deleteParameter": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/statistics/": {
      "methods": {
        "serveBuildStatisticValues": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "properties"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/duplicates": {
      "methods": {
        "getChangeDuplicates": {
          "GET": {
            "doc": "Experimental support only!",
            "response": "changes",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/children{path:(/.*)?}": {
      "methods": {
        "getArtifactChildren": {
          "GET": {
            "response": "files",
            "param": {
              "locator": "string",
              "resolveParameters": "boolean",
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/version": {
      "methods": {
        "serveVersion": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/debug/database/query/{query}": {
      "methods": {
        "executeDBQuery": {
          "GET": {
            "response": "text",
            "param": {
              "count": "int",
              "fieldDelimiter": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}": {
      "methods": {
        "serveGroup": {
          "GET": {
            "response": "group",
            "param": {
              "fields": "string"
            }
          }
        },
        "deleteGroup": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildQueue": {
      "methods": {
        "deleteBuildsExperimental": {
          "DELETE": {
            "param": {
              "fields": "string",
              "locator": "string"
            },
            "doc": "Experimental! Deletes the set of builds filtered"
          }
        },
        "replaceBuilds": {
          "PUT": {
            "request": "builds",
            "param": {
              "fields": "string"
            },
            "response": "builds"
          }
        },
        "queueNewBuild": {
          "POST": {
            "request": "build",
            "response": "build"
          }
        },
        "getBuilds": {
          "GET": {
            "response": "builds",
            "doc": "Serves build queue.",
            "param": {
              "fields": "string",
              "locator": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/buildTags": {
      "methods": {
        "serveBuildTypeBuildsTags": {
          "GET": {
            "response": "tags"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/issues": {
      "methods": {
        "getChangeIssue": {
          "GET": {
            "doc": "Experimental support only!",
            "response": "issues"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/info": {
      "methods": {
        "servePluginInfo": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "plugin"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/vcsRootInstance": {
      "methods": {
        "getChangeVCSRootInstance": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "doc": "Experimental support only!",
            "response": "vcs-root-instance"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/apiVersion": {
      "methods": {
        "serveApiVersion": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}/parameters": {
      "methods": {
        "replaceFeatureParameters": {
          "PUT": {
            "response": "properties",
            "param": {
              "fields": "string"
            },
            "request": "properties"
          }
        },
        "getFeatureParameters": {
          "GET": {
            "response": "properties",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/archived{path:(/.*)?}": {
      "methods": {
        "getZippedArtifacts": {
          "GET": {
            "param": {
              "resolveParameters": "boolean",
              "locator": "string",
              "name": "string",
              "logBuildUsage": "boolean"
            },
            "doc": "Experimental",
            "response": "any"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/investigations": {
      "methods": {
        "getInvestigations": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "investigations"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/testOccurrences": {
      "methods": {
        "getTestOccurrences": {
          "GET": {
            "param": {
              "fields": "string",
              "locator": "string"
            },
            "doc": "Experimental, the requests and results returned will change in future versions!",
            "response": "testOccurrences"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts{path:(/.*)?}": {
      "methods": {
        "getArtifacts": {
          "GET": {
            "param": {
              "locator": "string",
              "resolveParameters": "boolean",
              "fields": "string"
            },
            "doc": "More user-friendly URL for \"/{buildLocator}/artifacts/children\" one.",
            "response": "files"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes": {
      "methods": {
        "serveChanges": {
          "GET": {
            "param": {
              "start": "long",
              "locator": "string",
              "build": "string",
              "buildType": "string",
              "count": "int",
              "fields": "string",
              "project": "string",
              "vcsRoot": "string",
              "sinceChange": "string"
            },
            "doc": "Lists changes by the specified locator",
            "response": "changes"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/content{path:(/.*)?}": {
      "methods": {
        "getVcsFileContent": {
          "GET": {
            "doc": "Gets content of a file form VCS Experimental support only",
            "response": "any"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/children{path:(/.*)?}": {
      "methods": {
        "getVcsFileListing": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "doc": "Lists files in VCS Experimental support only",
            "response": "files"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}/projects/{projectLocator}": {
      "methods": {
        "getPoolProject": {
          "GET": {
            "response": "project",
            "param": {
              "fields": "string"
            }
          }
        },
        "deletePoolProject": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects": {
      "methods": {
        "createProject": {
          "POST": {
            "response": "project",
            "request": "newProjectDescription"
          }
        },
        "createEmptyProject": {
          "POST": {
            "request": "text",
            "response": "project"
          }
        },
        "serveProjects": {
          "GET": {
            "response": "projects",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs/files/latest/children{path:(/.*)?}": {
      "methods": {
        "getVcsFileListing": {
          "GET": {
            "response": "files",
            "doc": "Lists files in VCS Experimental support only",
            "param": {
              "fields": "string",
              "resolveParameters": "boolean"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances": {
      "methods": {
        "serveRootInstances": {
          "GET": {
            "response": "vcs-root-instances",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/testOccurrences/{testLocator}": {
      "methods": {
        "serveInstance": {
          "GET": {
            "response": "testOccurrence",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parentProject": {
      "methods": {
        "getParentProject": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "project"
          }
        },
        "setParentProject": {
          "PUT": {
            "response": "project",
            "request": "project"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/example/buildCancelRequest": {
      "methods": {
        "cancelBuild": {
          "GET": {
            "response": "buildCancelRequest"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/example/newProjectDescription": {
      "methods": {
        "getExampleNewProjectDescription": {
          "GET": {
            "doc": "Experimental support only. Use this to get an example of the bean to be posted to the /projects request to create a new project",
            "param": {
              "id": "string"
            },
            "response": "newProjectDescription"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/properties": {
      "methods": {
        "serveUserProperties": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "properties"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/relatedIssues": {
      "methods": {
        "serveBuildRelatedIssues": {
          "GET": {
            "response": "issuesUsages",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agents/{agentLocator}/pool": {
      "methods": {
        "setAgentPool": {
          "PUT": {
            "response": "agentPool",
            "request": "agentPool"
          }
        },
        "getAgentPool": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "agentPool"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/properties": {
      "methods": {
        "serveRootInstanceProperties": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "properties"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/problemOccurrences/{problemLocator}": {
      "methods": {
        "serveInstance": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "problemOccurrence"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}/properties": {
      "methods": {
        "serveRootInstanceProperties": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "properties"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}/parameters/{parameterName}": {
      "methods": {
        "getStepParameter": {
          "GET": {
            "response": "text"
          }
        },
        "addStepParameter": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/roles/{roleId}/{scope}": {
      "methods": {
        "listRole": {
          "GET": {
            "response": "role"
          }
        },
        "deleteRole": {
          "DELETE": {}
        },
        "addRoleSimple": {
          "POST": {
            "response": "role"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildQueue/{buildLocator}/{field}": {
      "methods": {
        "serveBuildFieldByBuildOnly": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildQueue/{buildLocator}/tags/": {
      "methods": {
        "addTag": {
          "POST": {
            "request": "text",
            "response": "text",
            "doc": "Adds a single tag to a build"
          }
        },
        "serveTags": {
          "GET": {
            "param": {
              "locator": "string",
              "fields": "string"
            },
            "response": "tags"
          }
        },
        "addTags": {
          "POST": {
            "doc": "Adds a set of tags to a build",
            "request": "tags"
          }
        },
        "replaceTags": {
          "PUT": {
            "request": "tags",
            "doc": "Replaces build's tags.",
            "param": {
              "fields": "string",
              "locator": "string"
            },
            "response": "tags"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parameters/{name}/value": {
      "methods": {
        "getParameterValueLong": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs/files/latest/metadata{path:(/.*)?}": {
      "methods": {
        "getVcsFile": {
          "GET": {
            "doc": "Gets VCS file details Experimental support only",
            "param": {
              "resolveParameters": "boolean"
            },
            "response": "file"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/debug/threadDump": {
      "methods": {
        "scheduleCheckingForChanges": {
          "GET": {
            "doc": "Experimental use only!",
            "response": "text",
            "param": {
              "lockedMonitors": "string",
              "lockedSynchronizers": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/settingsFile": {
      "methods": {
        "getSettingsFile": {
          "GET": {
            "doc": "Experimental support only",
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps": {
      "methods": {
        "getSteps": {
          "GET": {
            "response": "steps",
            "param": {
              "fields": "string"
            }
          }
        },
        "replaceSteps": {
          "PUT": {
            "response": "steps",
            "param": {
              "fields": "string"
            },
            "request": "steps"
          }
        },
        "addStep": {
          "POST": {
            "response": "step",
            "param": {
              "fields": "string"
            },
            "request": "step"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/roles/{roleId}/{scope}": {
      "methods": {
        "listRole": {
          "GET": {
            "response": "role"
          }
        },
        "addRoleSimplePost": {
          "POST": {}
        },
        "deleteRole": {
          "DELETE": {}
        },
        "addRoleSimple": {
          "PUT": {
            "response": "role"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}": {
      "methods": {
        "cancelBuild": {
          "POST": {
            "response": "build",
            "param": {
              "fields": "string"
            },
            "request": "buildCancelRequest"
          }
        },
        "deleteBuild": {
          "DELETE": {}
        },
        "serveBuild": {
          "GET": {
            "doc": "Serves a build described by the locator provided searching through those accessible by the current user. See {@link jetbrains.buildServer.server.rest.request.BuildRequest#serveAllBuilds(String, String, String, boolean, boolean, boolean, java.util.List, String, String, String, Long, Integer, String, javax.ws.rs.core.UriInfo, javax.servlet.http.HttpServletRequest)} If several builds are matched, the first one is used (the effect is the same as if \",count:1\" locator dimension is added)",
            "response": "build",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/metadata{path:(/.*)?}": {
      "methods": {
        "getVcsFile": {
          "GET": {
            "doc": "Gets VCS file details Experimental support only",
            "response": "file"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/server/backup": {
      "methods": {
        "getBackupStatus": {
          "GET": {
            "response": "text"
          }
        },
        "startBackup": {
          "POST": {
            "response": "text",
            "param": {
              "includeRunningBuilds": "boolean",
              "includeDatabase": "boolean",
              "includeBuildLogs": "boolean",
              "addTimestamp": "boolean",
              "includeSupplimentaryData": "boolean",
              "includePersonalChanges": "boolean",
              "includeConfigs": "boolean",
              "fileName": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/newBuildTypeDescription": {
      "methods": {
        "getExampleNewProjectDescriptionCompatibilityVersion1": {
          "GET": {
            "doc": "For compatibility with experimental feature of 8.0",
            "response": "newBuildTypeDescription"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/parameters/{name}/value": {
      "methods": {
        "getParameterValueLong": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agentPools": {
      "methods": {
        "setPools": {
          "POST": {
            "request": "agentPool",
            "response": "agentPool"
          }
        },
        "getPools": {
          "GET": {
            "response": "agentPools",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds": {
      "methods": {
        "serveBuilds": {
          "GET": {
            "doc": "Serves builds matching supplied condition.",
            "param": {
              "locator": "string",
              "start": "long",
              "tag": "string",
              "sinceBuild": "string",
              "sinceDate": "string",
              "status": "string",
              "includePersonal": "boolean",
              "fields": "string",
              "count": "int",
              "triggeredByUser": "string",
              "agentName": "string",
              "onlyPinned": "boolean",
              "includeCanceled": "boolean"
            },
            "response": "builds"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}/agents": {
      "methods": {
        "addAgent": {
          "POST": {
            "request": "agent",
            "doc": "Moves the agent posted to the pool",
            "param": {
              "fields": "string"
            },
            "response": "agent"
          }
        },
        "getPoolAgents": {
          "GET": {
            "response": "agents",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}": {
      "methods": {
        "serveRootInstance": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "vcs-root-instance"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/parentRevisions": {
      "methods": {
        "getChangeParentRevisions": {
          "GET": {
            "response": "items",
            "doc": "Experimental support only!"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/{field}": {
      "methods": {
        "setUserField": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "serveUserField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/triggers": {
      "methods": {
        "getTriggers": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "triggers"
          }
        },
        "replaceTriggers": {
          "PUT": {
            "param": {
              "fields": "string"
            },
            "doc": "Replaces trigger with those sent inthe request.",
            "response": "triggers",
            "request": "triggers"
          }
        },
        "addTrigger": {
          "POST": {
            "response": "trigger",
            "doc": "Creates new trigger. 'id' attribute is ignored in the submitted descriptor. Reports error if new trigger cannot be created (e.g. only single trigger of the type is allowed for a build configuration).",
            "param": {
              "fields": "string"
            },
            "request": "trigger"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/cctray/projects.xml": {
      "methods": {
        "serveProjects": {
          "GET": {
            "response": "Projects",
            "param": {
              "locator": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/settingsFile": {
      "methods": {
        "getSettingsFile": {
          "GET": {
            "doc": "Experimental support only",
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/content{path:(/.*)?}": {
      "methods": {
        "getArtifactContent": {
          "GET": {
            "param": {
              "logBuildUsage": "boolean",
              "resolveParameters": "boolean"
            },
            "response": "any"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/snapshot-dependencies": {
      "methods": {
        "replaceSnapshotDeps": {
          "PUT": {
            "request": "snapshot-dependencies",
            "response": "snapshot-dependencies",
            "doc": "Replaces snapshot dependency with those sent in request.",
            "param": {
              "fields": "string"
            }
          }
        },
        "addSnapshotDep": {
          "POST": {
            "request": "snapshot-dependency",
            "response": "snapshot-dependency",
            "doc": "Creates new snapshot dependency. 'id' attribute is ignored in the submitted descriptor. Reports error if new dependency cannot be created (e.g. another dependency on the specified build configuration already exists).",
            "param": {
              "fields": "string"
            }
          }
        },
        "getSnapshotDeps": {
          "GET": {
            "response": "snapshot-dependencies",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/statusIcon": {
      "methods": {
        "serveBuildStatusIcon": {
          "GET": {
            "response": "any"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds/{buildLocator}": {
      "methods": {
        "serveBuildWithProject": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "build"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/parameters/{name}": {
      "methods": {
        "getParameterValue": {
          "GET": {
            "response": "text"
          }
        },
        "getParameter": {
          "GET": {
            "response": "property"
          }
        },
        "setParameterValue": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "deleteBuildTypeParameter": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/properties": {
      "methods": {
        "getProperties": {
          "GET": {
            "response": "properties",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/canceledInfo": {
      "methods": {
        "getCanceledInfo": {
          "GET": {
            "response": "comment",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/parameters": {
      "methods": {
        "serveBuildTypeParameters": {
          "GET": {
            "param": {
              "locator": "string",
              "fields": "string"
            },
            "response": "properties"
          }
        },
        "deleteAllBuildTypeParameters": {
          "DELETE": {}
        },
        "setParameter": {
          "POST": {
            "response": "property",
            "param": {
              "fields": "string"
            },
            "request": "property"
          }
        },
        "changeBuildTypeParameters": {
          "PUT": {
            "request": "properties",
            "param": {
              "fields": "string"
            },
            "response": "properties"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/metadata{path:(/.*)?}": {
      "methods": {
        "getArtifactMetadata": {
          "GET": {
            "response": "file",
            "param": {
              "locator": "string",
              "resolveParameters": "boolean"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/resulting-properties/": {
      "methods": {
        "serveBuildActualParameters": {
          "GET": {
            "response": "properties",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/{field}": {
      "methods": {
        "getChangeField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/testOccurrences": {
      "methods": {
        "getTests": {
          "GET": {
            "response": "testOccurrences",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildQueue/{queuedBuildLocator}": {
      "methods": {
        "cancelBuild": {
          "POST": {
            "response": "build",
            "request": "buildCancelRequest"
          }
        },
        "deleteBuild": {
          "DELETE": {}
        },
        "getBuild": {
          "GET": {
            "response": "build",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users": {
      "methods": {
        "createUser": {
          "POST": {
            "request": "user",
            "response": "user",
            "param": {
              "fields": "string"
            }
          }
        },
        "serveUsers": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "users"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agents/{agentLocator}": {
      "methods": {
        "deleteAgent": {
          "DELETE": {}
        },
        "serveAgent": {
          "GET": {
            "response": "agent",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/{field}": {
      "methods": {
        "setField": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "serveField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}": {
      "methods": {
        "serveChange": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "change"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}/{name}": {
      "methods": {
        "changeFeatureSetting": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "getFeatureSetting": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/sources/files/{fileName:.+}": {
      "methods": {
        "serveSourceFile": {
          "GET": {
            "response": "any"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parameters/{name}": {
      "methods": {
        "getParameter": {
          "GET": {
            "response": "property"
          }
        },
        "deleteParameter": {
          "DELETE": {}
        },
        "getParameterValue": {
          "GET": {
            "response": "text"
          }
        },
        "putParameter": {
          "PUT": {
            "response": "text",
            "request": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/attributes": {
      "methods": {
        "getChangeAttributes": {
          "GET": {
            "doc": "Experimental support only!",
            "response": "entries"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/settingsFile": {
      "methods": {
        "getSettingsFile": {
          "GET": {
            "response": "text",
            "doc": "Experimental support only"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agents": {
      "methods": {
        "serveAgents": {
          "GET": {
            "response": "agents",
            "doc": "Returns list of agents",
            "param": {
              "includeUnauthorized": "boolean",
              "locator": "string",
              "includeDisconnected": "boolean",
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildQueue/{buildLocator}/example/buildCancelRequest": {
      "methods": {
        "cancelBuild": {
          "GET": {
            "response": "buildCancelRequest"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/properties/{name}": {
      "methods": {
        "removeUserProperty": {
          "DELETE": {}
        },
        "putUserProperty": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        },
        "serveUserProperty": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/investigations/{investigationLocator}": {
      "methods": {
        "serveInstance": {
          "GET": {
            "response": "investigation",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/builds/{buildLocator}/{field}": {
      "methods": {
        "serveBuildField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/problems": {
      "methods": {
        "getProblems": {
          "GET": {
            "response": "problems",
            "doc": "Experimental, the requests and results returned will change in future versions!",
            "param": {
              "locator": "string",
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/branches": {
      "methods": {
        "serveBranches": {
          "GET": {
            "response": "branches",
            "doc": "Lists branches of the build type.",
            "param": {
              "locator": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}": {
      "methods": {
        "serveRoot": {
          "GET": {
            "response": "vcs-root",
            "param": {
              "fields": "string"
            }
          }
        },
        "deleteRoot": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-root-instances": {
      "methods": {
        "serveInstances": {
          "GET": {
            "response": "vcs-root-instances",
            "param": {
              "fields": "string",
              "locator": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/comment": {
      "methods": {
        "deleteComment": {
          "DELETE": {}
        },
        "replaceComment": {
          "PUT": {
            "request": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}": {
      "methods": {
        "deletePool": {
          "DELETE": {}
        },
        "getPool": {
          "GET": {
            "response": "agentPool",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parameters": {
      "methods": {
        "changeAllParameters": {
          "PUT": {
            "param": {
              "fields": "string"
            },
            "response": "properties",
            "request": "properties"
          }
        },
        "setParameter": {
          "POST": {
            "response": "property",
            "request": "property"
          }
        },
        "serveParameters": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "properties"
          }
        },
        "deleteAllParameters": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcsLabeling": {
      "methods": {
        "setVCSLabelingOptions": {
          "PUT": {
            "request": "vcsLabeling",
            "doc": "Sets VCS labeling settings Experimental support only",
            "response": "vcsLabeling"
          }
        },
        "getVCSLabelingOptions": {
          "GET": {
            "doc": "Gets VCS labeling settings Experimental support only",
            "response": "vcsLabeling"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/pin/": {
      "methods": {
        "pinBuild": {
          "PUT": {
            "request": "text",
            "doc": "Pins a build"
          }
        },
        "unpinBuild": {
          "DELETE": {
            "doc": "Unpins a build",
            "request": "text"
          }
        },
        "getPinned": {
          "GET": {
            "response": "text",
            "doc": "Fetches current build pinned status."
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/template": {
      "methods": {
        "deleteTemplateAssociation": {
          "DELETE": {}
        },
        "getTemplateAssociation": {
          "PUT": {
            "request": "text",
            "param": {
              "fields": "string"
            },
            "response": "buildType"
          }
        },
        "serveBuildTypeTemplate": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "buildType"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}/parameters/{parameterName}": {
      "methods": {
        "addFeatureParameter": {
          "PUT": {
            "response": "text",
            "request": "any"
          }
        },
        "getFeatureParameter": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/vcsRoot": {
      "methods": {
        "getChangeVCSRoot": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "vcs-root-instance"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/parentChanges": {
      "methods": {
        "getParentChanges": {
          "GET": {
            "doc": "Experimental support only!",
            "response": "changes",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features": {
      "methods": {
        "addFeature": {
          "POST": {
            "param": {
              "fields": "string"
            },
            "response": "feature",
            "request": "feature"
          }
        },
        "replaceFeatures": {
          "PUT": {
            "param": {
              "fields": "string"
            },
            "response": "features",
            "request": "features"
          }
        },
        "getFeatures": {
          "GET": {
            "response": "features",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds/{buildLocator}/{field}": {
      "methods": {
        "serveBuildFieldWithProject": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/problemOccurrences": {
      "methods": {
        "getProblems": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "problemOccurrences"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/example/newBuildTypeDescription": {
      "methods": {
        "getExampleNewProjectDescription": {
          "GET": {
            "response": "newBuildTypeDescription",
            "doc": "Experimental support only. Use this to get an example of the bean to be posted to the /buildTypes request to create a new build type"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/tests/{testLocator}": {
      "methods": {
        "serveInstance": {
          "GET": {
            "response": "test",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/debug/database/tables": {
      "methods": {
        "listDBTables": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/investigations": {
      "methods": {
        "getInvestigations": {
          "GET": {
            "param": {
              "fields": "string",
              "locator": "string"
            },
            "doc": "Experimental, the requests and results returned will change in future versions!",
            "response": "investigations"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/agentPools": {
      "methods": {
        "setProjectAgentPools": {
          "POST": {
            "response": "agentPool",
            "request": "agentPool"
          },
          "PUT": {
            "request": "agentPools",
            "response": "agentPools",
            "param": {
              "fields": "string"
            }
          }
        },
        "getProjectAgentPools": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "agentPools"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/templates/{btLocator}": {
      "methods": {
        "serveBuildTypeTemplates": {
          "GET": {
            "response": "buildType",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/userGroups": {
      "methods": {
        "addGroup": {
          "POST": {
            "param": {
              "fields": "string"
            },
            "response": "group",
            "request": "group"
          }
        },
        "serveGroups": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "groups"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/templates": {
      "methods": {
        "createBuildTypeTemplate": {
          "POST": {
            "response": "buildType",
            "doc": "Creates a new build configuration template by copying existing one.",
            "param": {
              "fields": "string"
            },
            "request": "newBuildTypeDescription"
          }
        },
        "createEmptyBuildTypeTemplate": {
          "POST": {
            "request": "text",
            "response": "buildType",
            "param": {
              "fields": "string"
            }
          }
        },
        "serveTemplatesInProject": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "buildTypes"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/users/{userLocator}": {
      "methods": {
        "updateUser": {
          "PUT": {
            "response": "user",
            "param": {
              "fields": "string"
            },
            "request": "user"
          }
        },
        "deleteUser": {
          "DELETE": {}
        },
        "serveUser": {
          "GET": {
            "response": "user",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/tags/": {
      "methods": {
        "addTag": {
          "POST": {
            "response": "text",
            "doc": "Adds a single tag to a build",
            "request": "text"
          }
        },
        "serveTags": {
          "GET": {
            "param": {
              "locator": "string",
              "fields": "string"
            },
            "response": "tags"
          }
        },
        "replaceTags": {
          "PUT": {
            "doc": "Replaces the build's tags designated by the tags 'locator' to the set of tags passed.",
            "param": {
              "fields": "string",
              "locator": "string"
            },
            "response": "tags",
            "request": "tags"
          }
        },
        "addTags": {
          "POST": {
            "doc": "Adds a set of tags to a build",
            "request": "tags"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/snapshot-dependencies/{snapshotDepLocator}": {
      "methods": {
        "getSnapshotDep": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "snapshot-dependency"
          }
        },
        "deleteSnapshotDep": {
          "DELETE": {}
        },
        "replaceSnapshotDep": {
          "PUT": {
            "response": "snapshot-dependency",
            "param": {
              "fields": "string"
            },
            "request": "snapshot-dependency"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes": {
      "methods": {
        "getBuildTypes": {
          "GET": {
            "param": {
              "locator": "string",
              "fields": "string"
            },
            "doc": "Lists build types registered on the server. Build templates are not included by default",
            "response": "buildTypes"
          }
        },
        "addBuildType": {
          "POST": {
            "response": "buildType",
            "param": {
              "fields": "string"
            },
            "request": "buildType"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/problemOccurrences": {
      "methods": {
        "getProblems": {
          "GET": {
            "param": {
              "locator": "string",
              "fields": "string"
            },
            "doc": "Experimental, the requests and results returned will change in future versions!",
            "response": "problemOccurrences"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/agent-requirements": {
      "methods": {
        "getAgentRequirements": {
          "GET": {
            "response": "agent-requirements",
            "param": {
              "fields": "string"
            }
          }
        },
        "replaceAgentRequirements": {
          "PUT": {
            "response": "agent-requirements",
            "doc": "Replaces agent requirements with those sent in the request.",
            "param": {
              "fields": "string"
            },
            "request": "agent-requirements"
          }
        },
        "addAgentRequirement": {
          "POST": {
            "request": "agent-requirement",
            "param": {
              "fields": "string"
            },
            "doc": "Creates new agent requirement. 'id' attribute is ignored in the submitted descriptor. Reports error if new requirement cannot be created (e.g. another requirement is present for the parameter).",
            "response": "agent-requirement"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-entries/{id}": {
      "methods": {
        "updateVcsRootEntry": {
          "PUT": {
            "param": {
              "fields": "string"
            },
            "response": "vcs-root-entry",
            "request": "vcs-root-entry"
          }
        },
        "deleteVcsRootEntry": {
          "DELETE": {}
        },
        "getVcsRootEntry": {
          "GET": {
            "response": "vcs-root-entry",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds": {
      "methods": {
        "serveAllBuilds": {
          "GET": {
            "doc": "Serves builds matching supplied condition.",
            "response": "builds",
            "param": {
              "count": "int",
              "fields": "string",
              "includePersonal": "boolean",
              "agentName": "string",
              "onlyPinned": "boolean",
              "includeCanceled": "boolean",
              "triggeredByUser": "string",
              "tag": "string",
              "start": "long",
              "locator": "string",
              "sinceDate": "string",
              "buildType": "string",
              "status": "string",
              "sinceBuild": "string"
            }
          }
        },
        "deleteBuilds": {
          "DELETE": {
            "param": {
              "locator": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildQueue/{queuedBuildLocator}/compatibleAgents": {
      "methods": {
        "serveCompatibleAgents": {
          "GET": {
            "response": "agents",
            "param": {
              "fields": "string"
            }
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/triggers/{triggerLocator}": {
      "methods": {
        "replaceTrigger": {
          "PUT": {
            "request": "trigger",
            "response": "trigger",
            "param": {
              "fields": "string"
            }
          }
        },
        "getTrigger": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "trigger"
          }
        },
        "deleteTrigger": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/{field}": {
      "methods": {
        "setProjectFiled": {
          "PUT": {
            "response": "text",
            "request": "text"
          }
        },
        "serveProjectField": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/agentPools/{agentPoolLocator}": {
      "methods": {
        "deleteProjectAgentPools": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/triggers/{triggerLocator}/{fieldName}": {
      "methods": {
        "getTriggerSetting": {
          "GET": {
            "response": "text"
          }
        },
        "changeTriggerSetting": {
          "PUT": {
            "request": "text",
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/properties": {
      "methods": {
        "serveProperties": {
          "GET": {
            "response": "properties",
            "param": {
              "fields": "string"
            }
          }
        },
        "changProperties": {
          "PUT": {
            "param": {
              "fields": "string"
            },
            "response": "properties",
            "request": "properties"
          }
        },
        "deleteAllProperties": {
          "DELETE": {}
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/problems/{problemLocator}": {
      "methods": {
        "serveInstance": {
          "GET": {
            "param": {
              "fields": "string"
            },
            "response": "problem"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/settings/{name}": {
      "methods": {
        "putBuildTypeSetting": {
          "PUT": {
            "response": "text",
            "request": "any"
          }
        },
        "serveBuildTypeSetting": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}/projects": {
      "methods": {
        "replaceProjects": {
          "PUT": {
            "request": "projects",
            "response": "projects",
            "doc": "Associates the posted set of projects with the pool which replaces earlier associations on this pool"
          }
        },
        "getPoolProjects": {
          "GET": {
            "response": "projects",
            "param": {
              "fields": "string"
            }
          }
        },
        "addProject": {
          "POST": {
            "request": "project",
            "response": "project",
            "doc": "Adds the posted project to the pool associated projects"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/server/{field}": {
      "methods": {
        "serveServerVersion": {
          "GET": {
            "response": "text"
          }
        }
      }
    },
    "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/files{path:(/.*)?}": {
      "methods": {
        "getArtifactFilesContent": {
          "GET": {
            "response": "any"
          }
        }
      }
    }
  }
}
