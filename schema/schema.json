{
  "typemap": {
    "newProjectDescription": {
      "sourceProjectLocator": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildTypesIdsMap": {
        "is_sequence": 1,
        "from": "copyOptionsDescription",
        "minOccurs": "0",
        "type": "properties"
      },
      "copyAllAssociatedSettings": {
        "from": "copyOptionsDescription",
        "is_attribute": 1,
        "type": "boolean"
      },
      "vcsRootsIdsMap": {
        "type": "properties",
        "minOccurs": "0",
        "from": "copyOptionsDescription",
        "is_sequence": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "parentProject": {
        "is_sequence": 1,
        "type": "project",
        "minOccurs": "0"
      },
      "projectsIdsMap": {
        "type": "properties",
        "minOccurs": "0",
        "from": "copyOptionsDescription",
        "is_sequence": 1
      },
      "sourceProject": {
        "is_sequence": 1,
        "type": "project",
        "minOccurs": "0"
      }
    },
    "items": {
      "item": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "type": "xs:string",
        "minOccurs": "0"
      }
    },
    "issue": {
      "url": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "artifact-dependencies": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "artifact-dependency": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      }
    },
    "buildTriggeringOptions": {
      "rebuildDependencies": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "buildTypes"
      },
      "rebuildAllDependencies": {
        "type": "boolean",
        "is_attribute": 1
      },
      "queueAtTop": {
        "type": "boolean",
        "is_attribute": 1
      },
      "cleanSources": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "buildTypes": {
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "buildType": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1,
        "minOccurs": "0"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "revisions": {
      "revision": {
        "type": "revision",
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "tests": {
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "test": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "user": {
      "roles": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "realm": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "username": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "lastLogin": {
        "is_attribute": 1,
        "type": "string"
      },
      "groups": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      },
      "password": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "email": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "vcsLabeling": {
      "type": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsRoots": {
        "is_sequence": 1,
        "type": "vcs-roots",
        "minOccurs": "0"
      },
      "branchFilter": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "xs:string"
      },
      "labelName": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "change": {
      "username": {
        "type": "string",
        "is_attribute": 1
      },
      "webUrl": {
        "is_attribute": 1,
        "type": "string"
      },
      "date": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcsRootInstance": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "vcs-root-instance"
      },
      "files": {
        "type": "fileChanges",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "personal": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "version": {
        "is_attribute": 1,
        "type": "string"
      },
      "user": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "is_attribute": 1,
        "type": "long"
      },
      "comment": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "xs:string"
      }
    },
    "agent-requirements": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "agent-requirement": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1,
        "minOccurs": "0"
      }
    },
    "buildType": {
      "projectId": {
        "is_attribute": 1,
        "type": "string"
      },
      "projectName": {
        "is_attribute": 1,
        "type": "string"
      },
      "investigations": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "triggers": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "parameters": {
        "type": "properties",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "artifact-dependencies": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "steps": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "snapshot-dependencies": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "template": {
        "minOccurs": "0",
        "type": "buildType",
        "is_sequence": 1
      },
      "project": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "builds": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "templateFlag": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "uuid": {
        "type": "string",
        "is_attribute": 1
      },
      "paused": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "vcs-root-entries": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "settings": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "projectInternalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "agent-requirements": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "features": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "description": {
        "type": "string",
        "is_attribute": 1
      },
      "internalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "vcs-root-instance": {
      "vcsName": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcsRootInternalId": {
        "type": "string",
        "is_attribute": 1
      },
      "lastChecked": {
        "type": "string",
        "is_attribute": 1
      },
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcs-root-id": {
        "type": "string",
        "is_attribute": 1
      },
      "lastVersionInternal": {
        "is_attribute": 1,
        "type": "string"
      },
      "projectLocator": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcs-root": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "properties": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "lastVersion": {
        "type": "string",
        "is_attribute": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "file-ref": {
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "vcs-root": {
      "properties": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "modificationCheckInterval": {
        "type": "int",
        "is_attribute": 1
      },
      "vcsRootInstances": {
        "is_sequence": 1,
        "type": "vcs-root-instances",
        "minOccurs": "0"
      },
      "lastChecked": {
        "is_attribute": 1,
        "type": "string"
      },
      "status": {
        "type": "string",
        "is_attribute": 1
      },
      "uuid": {
        "is_attribute": 1,
        "type": "string"
      },
      "projectLocator": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "internalId": {
        "is_attribute": 1,
        "type": "long"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "project": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "vcsName": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "vcs-roots": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcs-root": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1,
        "minOccurs": "0"
      }
    },
    "vcs-root-instances": {
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "vcs-root-instance": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "role": {
      "scope": {
        "type": "string",
        "is_attribute": 1
      },
      "roleId": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "roles": {
      "role": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      }
    },
    "problemTarget": {
      "tests": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "anyProblem": {
        "type": "boolean",
        "is_attribute": 1
      },
      "problems": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "snapshot-dependencies": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "snapshot-dependency": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "branches": {
      "branch": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      }
    },
    "agent": {
      "uptodate": {
        "type": "boolean",
        "is_attribute": 1
      },
      "authorized": {
        "type": "boolean",
        "is_attribute": 1
      },
      "typeId": {
        "type": "int",
        "is_attribute": 1
      },
      "connected": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "enabled": {
        "type": "boolean",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "locator": {
        "type": "string",
        "is_attribute": 1
      },
      "pool": {
        "is_sequence": 1,
        "type": "agentPool",
        "minOccurs": "0"
      },
      "ip": {
        "type": "string",
        "is_attribute": 1
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "issueUsage": {
      "issue": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "issue"
      },
      "changes": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "changes"
      }
    },
    "groups": {
      "group": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "plugin": {
      "loadPath": {
        "is_attribute": 1,
        "type": "string"
      },
      "displayName": {
        "is_attribute": 1,
        "type": "string"
      },
      "version": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "parameters": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      }
    },
    "problemOccurrences": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "ignored": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "newFailed": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "problemOccurrence": {
        "minOccurs": "0",
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "failed": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "muted": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "passed": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      }
    },
    "step": {
      "id": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "properties": {
        "minOccurs": "0",
        "is_ref": 1,
        "from": "propEntity",
        "is_sequence": 1
      },
      "disabled": {
        "type": "boolean",
        "from": "propEntity",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "type": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      }
    },
    "buildCancelRequest": {
      "comment": {
        "type": "string",
        "is_attribute": 1
      },
      "readdIntoQueue": {
        "is_attribute": 1,
        "type": "boolean"
      }
    },
    "problems": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "problem": {
        "minOccurs": "0",
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1
      }
    },
    "projects": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "project": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "vcs-root-entry": {
      "checkout-rules": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "vcs-root": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "propEntity": {
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "disabled": {
        "type": "boolean",
        "is_attribute": 1
      },
      "type": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "test": {
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "testOccurrences": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      },
      "mutes": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "investigations": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      }
    },
    "testOccurrence": {
      "muted": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "firstFailed": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "testOccurrence"
      },
      "currentlyInvestigated": {
        "type": "boolean",
        "is_attribute": 1
      },
      "details": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "xs:string"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "mute": {
        "is_sequence": 1,
        "type": "mute",
        "minOccurs": "0"
      },
      "duration": {
        "is_attribute": 1,
        "type": "int"
      },
      "currentlyMuted": {
        "type": "boolean",
        "is_attribute": 1
      },
      "test": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "build": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "ignored": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "nextFixed": {
        "minOccurs": "0",
        "type": "testOccurrence",
        "is_sequence": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "ignoreDetails": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      }
    },
    "newBuildTypeDescription": {
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "sourceBuildTypeLocator": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildTypesIdsMap": {
        "from": "copyOptionsDescription",
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "copyAllAssociatedSettings": {
        "type": "boolean",
        "is_attribute": 1,
        "from": "copyOptionsDescription"
      },
      "vcsRootsIdsMap": {
        "from": "copyOptionsDescription",
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "sourceBuildType": {
        "minOccurs": "0",
        "type": "buildType",
        "is_sequence": 1
      },
      "projectsIdsMap": {
        "from": "copyOptionsDescription",
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      }
    },
    "steps": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "step": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "agents": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "agent": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1,
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "snapshot-dependency": {
      "type": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      },
      "id": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "source-buildType": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "buildType"
      },
      "properties": {
        "is_ref": 1,
        "from": "propEntity",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "disabled": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "boolean"
      },
      "name": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      }
    },
    "feature": {
      "id": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "disabled": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "boolean"
      },
      "name": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1,
        "from": "propEntity"
      },
      "type": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      }
    },
    "builds": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "build": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "agentPools": {
      "agentPool": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "project": {
      "projects": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "uuid": {
        "is_attribute": 1,
        "type": "string"
      },
      "parentProjectInternalId": {
        "type": "string",
        "is_attribute": 1
      },
      "parentProjectId": {
        "is_attribute": 1,
        "type": "string"
      },
      "description": {
        "type": "string",
        "is_attribute": 1
      },
      "internalId": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "parentProjectName": {
        "type": "string",
        "is_attribute": 1
      },
      "locator": {
        "type": "string",
        "is_attribute": 1
      },
      "templates": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "buildTypes"
      },
      "vcsRoots": {
        "minOccurs": "0",
        "type": "vcs-roots",
        "is_sequence": 1
      },
      "parameters": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "archived": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "buildTypes": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "parentProject": {
        "minOccurs": "0",
        "type": "project",
        "is_sequence": 1
      }
    },
    "comment": {
      "user": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "timestamp": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "text": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      }
    },
    "progress-info": {
      "currentStageText": {
        "is_attribute": 1,
        "type": "string"
      },
      "percentageComplete": {
        "type": "int",
        "is_attribute": 1
      },
      "probablyHanging": {
        "type": "boolean",
        "is_attribute": 1
      },
      "elapsedSeconds": {
        "type": "long",
        "is_attribute": 1
      },
      "estimatedTotalSeconds": {
        "is_attribute": 1,
        "type": "long"
      },
      "outdated": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "problemOccurrence": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "details": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "xs:string"
      },
      "build": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "currentlyInvestigated": {
        "type": "boolean",
        "is_attribute": 1
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "currentlyMuted": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "additionalData": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "identity": {
        "type": "string",
        "is_attribute": 1
      },
      "muted": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "problem": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "mute": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "mute"
      }
    },
    "changes": {
      "change": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "tags": {
      "tag": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1,
        "minOccurs": "0"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "files": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "file": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1,
        "minOccurs": "0"
      }
    },
    "entries": {
      "count": {
        "type": "long",
        "is_attribute": 1
      },
      "entry": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      }
    },
    "testOccurrences": {
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "failed": {
        "is_attribute": 1,
        "from": "occurrencesSummary",
        "type": "int"
      },
      "muted": {
        "is_attribute": 1,
        "from": "occurrencesSummary",
        "type": "int"
      },
      "passed": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "ignored": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "newFailed": {
        "is_attribute": 1,
        "from": "occurrencesSummary",
        "type": "int"
      },
      "testOccurrence": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "mute": {
      "resolution": {
        "minOccurs": "0",
        "type": "resolution",
        "is_sequence": 1
      },
      "scope": {
        "type": "problemScope",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "id": {
        "type": "int",
        "is_attribute": 1
      },
      "assignment": {
        "type": "comment",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "target": {
        "is_sequence": 1,
        "type": "problemTarget",
        "minOccurs": "0"
      }
    },
    "fileChanges": {
      "file": {
        "minOccurs": "0",
        "type": "fileChange",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      }
    },
    "vcs-root-entries": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "vcs-root-entry": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "agent-requirement": {
      "type": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "id": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      },
      "properties": {
        "minOccurs": "0",
        "from": "propEntity",
        "is_ref": 1,
        "is_sequence": 1
      },
      "name": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "disabled": {
        "type": "boolean",
        "is_attribute": 1,
        "from": "propEntity"
      }
    },
    "issues": {
      "issue": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "type": "issue",
        "minOccurs": "0"
      }
    },
    "tag": {
      "owner": {
        "minOccurs": "0",
        "type": "user",
        "is_sequence": 1
      },
      "private": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "parameterType": {
      "rawValue": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "property": {
      "type": {
        "is_sequence": 1,
        "type": "parameterType",
        "minOccurs": "0"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "value": {
        "type": "string",
        "is_attribute": 1
      },
      "own": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "group": {
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "description": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "key": {
        "is_attribute": 1,
        "type": "string"
      },
      "parent-groups": {
        "is_sequence": 1,
        "type": "groups",
        "minOccurs": "0"
      },
      "roles": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "child-groups": {
        "is_sequence": 1,
        "type": "groups",
        "minOccurs": "0"
      },
      "properties": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "users": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      }
    },
    "server": {
      "userGroups": {
        "minOccurs": "0",
        "type": "href",
        "is_sequence": 1
      },
      "version": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildNumber": {
        "type": "string",
        "is_attribute": 1
      },
      "agents": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "buildDate": {
        "type": "string",
        "is_attribute": 1
      },
      "agentPools": {
        "type": "href",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "builds": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "startTime": {
        "is_attribute": 1,
        "type": "string"
      },
      "versionMinor": {
        "is_attribute": 1,
        "type": "byte"
      },
      "vcsRoots": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "buildQueue": {
        "type": "href",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "users": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "internalId": {
        "type": "string",
        "is_attribute": 1
      },
      "projects": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "versionMajor": {
        "type": "byte",
        "is_attribute": 1
      },
      "currentTime": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "artifact-dependency": {
      "type": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      },
      "id": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "source-buildType": {
        "minOccurs": "0",
        "type": "buildType",
        "is_sequence": 1
      },
      "properties": {
        "is_ref": 1,
        "from": "propEntity",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "name": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      },
      "disabled": {
        "type": "boolean",
        "is_attribute": 1,
        "from": "propEntity"
      }
    },
    "problemScope": {
      "project": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "buildType": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "buildTypes": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "occurrencesSummary": {
      "newFailed": {
        "type": "int",
        "is_attribute": 1
      },
      "passed": {
        "type": "int",
        "is_attribute": 1
      },
      "ignored": {
        "is_attribute": 1,
        "type": "int"
      },
      "failed": {
        "is_attribute": 1,
        "type": "int"
      },
      "muted": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "problem": {
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "investigations": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "mutes": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "identity": {
        "is_attribute": 1,
        "type": "string"
      },
      "problemOccurrences": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "agentPool": {
      "agents": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "is_attribute": 1,
        "type": "int"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "projects": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      }
    },
    "resolution": {
      "time": {
        "type": "xs:string",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "users": {
      "user": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "investigations": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "investigation": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "trigger": {
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "from": "propEntity",
        "is_ref": 1
      },
      "disabled": {
        "type": "boolean",
        "from": "propEntity",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      },
      "id": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "type": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      }
    },
    "triggers": {
      "trigger": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "fileChange": {
      "before-revision": {
        "is_attribute": 1,
        "type": "string"
      },
      "after-revision": {
        "is_attribute": 1,
        "type": "string"
      },
      "relative-file": {
        "is_attribute": 1,
        "type": "string"
      },
      "file": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "properties": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "property": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "investigation": {
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "state": {
        "type": "string",
        "is_attribute": 1
      },
      "assignment": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "comment"
      },
      "responsible": {
        "minOccurs": "0",
        "type": "user",
        "is_sequence": 1
      },
      "scope": {
        "is_sequence": 1,
        "type": "problemScope",
        "minOccurs": "0"
      },
      "resolution": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "resolution"
      },
      "assignee": {
        "type": "user",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "target": {
        "minOccurs": "0",
        "type": "problemTarget",
        "is_sequence": 1
      }
    },
    "triggeredBy": {
      "rawValue": {
        "type": "string",
        "is_attribute": 1
      },
      "type": {
        "type": "string",
        "is_attribute": 1
      },
      "user": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "details": {
        "type": "string",
        "is_attribute": 1
      },
      "buildType": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "date": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "entry": {
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "value": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "features": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "feature": {
        "minOccurs": "0",
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1
      }
    },
    "build": {
      "tags": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "statusText": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "buildType": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "waitReason": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "testOccurrences": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "buildTypeId": {
        "is_attribute": 1,
        "type": "string"
      },
      "pinInfo": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "comment"
      },
      "startDate": {
        "type": "xs:string",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "running-info": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "progress-info"
      },
      "statistics": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "buildTypeInternalId": {
        "type": "string",
        "is_attribute": 1
      },
      "number": {
        "is_attribute": 1,
        "type": "string"
      },
      "artifact-dependencies": {
        "is_sequence": 1,
        "type": "builds",
        "minOccurs": "0"
      },
      "attributes": {
        "is_sequence": 1,
        "type": "entries",
        "minOccurs": "0"
      },
      "revisions": {
        "minOccurs": "0",
        "type": "revisions",
        "is_sequence": 1
      },
      "triggeringOptions": {
        "is_sequence": 1,
        "type": "buildTriggeringOptions",
        "minOccurs": "0"
      },
      "custom-artifact-dependencies": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "artifact-dependencies"
      },
      "pinned": {
        "type": "boolean",
        "is_attribute": 1
      },
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "unspecifiedBranch": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "lastChanges": {
        "is_sequence": 1,
        "type": "changes",
        "minOccurs": "0"
      },
      "comment": {
        "type": "comment",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "compatibleAgents": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "agents"
      },
      "canceledInfo": {
        "type": "comment",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "changes": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "branchName": {
        "type": "string",
        "is_attribute": 1
      },
      "personal": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "defaultBranch": {
        "type": "boolean",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "startEstimate": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "history": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "taskId": {
        "is_attribute": 1,
        "type": "long"
      },
      "state": {
        "type": "string",
        "is_attribute": 1
      },
      "finishDate": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "running": {
        "type": "boolean",
        "is_attribute": 1
      },
      "relatedIssues": {
        "minOccurs": "0",
        "type": "issuesUsages",
        "is_sequence": 1
      },
      "queuedDate": {
        "type": "xs:string",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "snapshot-dependencies": {
        "type": "builds",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      },
      "agent": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "percentageComplete": {
        "is_attribute": 1,
        "type": "int"
      },
      "properties": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "artifacts": {
        "minOccurs": "0",
        "type": "files",
        "is_sequence": 1
      },
      "triggered": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "triggeredBy"
      },
      "problemOccurrences": {
        "minOccurs": "0",
        "is_ref": 1,
        "is_sequence": 1
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      }
    },
    "copyOptionsDescription": {
      "copyAllAssociatedSettings": {
        "type": "boolean",
        "is_attribute": 1
      },
      "projectsIdsMap": {
        "type": "properties",
        "minOccurs": "0",
        "is_sequence": 1
      },
      "buildTypesIdsMap": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "vcsRootsIdsMap": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      }
    },
    "issuesUsages": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "issueUsage": {
        "type": "issueUsage",
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "href": {
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "file": {
      "name": {
        "from": "file-ref",
        "is_attribute": 1,
        "type": "string"
      },
      "parent": {
        "is_sequence": 1,
        "minOccurs": "0",
        "type": "file-ref"
      },
      "modificationTime": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "from": "file-ref",
        "is_attribute": 1,
        "type": "string"
      },
      "children": {
        "minOccurs": "0",
        "type": "href",
        "is_sequence": 1
      },
      "size": {
        "type": "long",
        "is_attribute": 1
      },
      "content": {
        "type": "href",
        "minOccurs": "0",
        "is_sequence": 1
      }
    },
    "plugins": {
      "plugin": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "mutes": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "mute": {
        "minOccurs": "0",
        "type": "mute",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "branch": {
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "unspecified": {
        "type": "boolean",
        "is_attribute": 1
      },
      "default": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "revision": {
      "version": {
        "type": "string",
        "is_attribute": 1
      },
      "vcs-root-instance": {
        "is_sequence": 1,
        "is_ref": 1,
        "minOccurs": "0"
      },
      "internalVersion": {
        "is_attribute": 1,
        "type": "string"
      }
    }
  },
  "entities": {
    "http://tc.mycompany.com/app/rest/userGroups": {
      "serveGroups": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "groups"
          ]
        }
      },
      "addGroup": {
        "POST": {
          "response": [
            "json",
            "group"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "group"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/snapshot-dependencies/{snapshotDepLocator}": {
      "deleteSnapshotDep": {
        "DELETE": {}
      },
      "getSnapshotDep": {
        "GET": {
          "response": [
            "json",
            "snapshot-dependency"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "replaceSnapshotDep": {
        "PUT": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "snapshot-dependency"
          ],
          "request": [
            "json",
            "snapshot-dependency"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/artifacts/metadata{path:(/.*)?}": {
      "getArtifactMetadata": {
        "GET": {
          "param": [
            [
              "resolveParameters",
              "boolean"
            ],
            [
              "locator",
              "string"
            ]
          ],
          "response": [
            "json",
            "file"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/investigations/{investigationLocator}": {
      "serveInstance": {
        "GET": {
          "response": [
            "json",
            "investigation"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/branches": {
      "serveBranches": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ]
          ],
          "response": [
            "json",
            "branches"
          ],
          "doc": "Lists branches of the build type."
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/{field}": {
      "getChangeField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/features/{featureId}/parameters": {
      "replaceFeatureParameters": {
        "PUT": {
          "request": [
            "json",
            "properties"
          ],
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "getFeatureParameters": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/newProjectDescription": {
      "getExampleNewProjectDescriptionCompatibilityVersion1": {
        "GET": {
          "response": [
            "json",
            "newProjectDescription"
          ],
          "param": [
            [
              "id",
              "string"
            ]
          ],
          "doc": "For compatibility with experimental feature of 8.0"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/agentPools/{agentPoolLocator}": {
      "deleteProjectAgentPools": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/problemOccurrences": {
      "getProblems": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "problemOccurrences"
          ],
          "doc": "Experimental, the requests and results returned will change in future versions!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/template": {
      "getTemplateAssociation": {
        "PUT": {
          "request": [
            "text"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ]
        }
      },
      "deleteTemplateAssociation": {
        "DELETE": {}
      },
      "serveBuildTypeTemplate": {
        "GET": {
          "response": [
            "json",
            "buildType"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agents/{agentLocator}/pool": {
      "setAgentPool": {
        "PUT": {
          "request": [
            "json",
            "agentPool"
          ],
          "response": [
            "json",
            "agentPool"
          ]
        }
      },
      "getAgentPool": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agentPool"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds/{buildLocator}/{field}": {
      "serveBuildFieldWithProject": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds": {
      "serveBuilds": {
        "GET": {
          "response": [
            "json",
            "builds"
          ],
          "param": [
            [
              "status",
              "string"
            ],
            [
              "triggeredByUser",
              "string"
            ],
            [
              "includePersonal",
              "boolean"
            ],
            [
              "includeCanceled",
              "boolean"
            ],
            [
              "onlyPinned",
              "boolean"
            ],
            [
              "tag",
              "string"
            ],
            [
              "agentName",
              "string"
            ],
            [
              "sinceBuild",
              "string"
            ],
            [
              "sinceDate",
              "string"
            ],
            [
              "start",
              "long"
            ],
            [
              "count",
              "int"
            ],
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "doc": "Serves builds matching supplied condition."
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/canceledInfo": {
      "getCanceledInfo": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "comment"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/testOccurrences": {
      "getTests": {
        "GET": {
          "response": [
            "json",
            "testOccurrences"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/artifacts/children{path:(/.*)?}": {
      "getArtifactChildren": {
        "GET": {
          "response": [
            "json",
            "files"
          ],
          "param": [
            [
              "resolveParameters",
              "boolean"
            ],
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/repositoryState": {
      "deleteRepositoryState": {
        "DELETE": {}
      },
      "getRepositoryState": {
        "GET": {
          "response": [
            "json",
            "entries"
          ]
        }
      },
      "setRepositoryState": {
        "PUT": {
          "request": [
            "json",
            "entries"
          ],
          "response": [
            "json",
            "entries"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/aliases": {
      "getAliases": {
        "GET": {
          "doc": "Experimental support only",
          "response": [
            "json",
            "items"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcs/files/latest/metadata{path:(/.*)?}": {
      "getVcsFile": {
        "GET": {
          "param": [
            [
              "resolveParameters",
              "boolean"
            ]
          ],
          "response": [
            "json",
            "file"
          ],
          "doc": "Gets VCS file details Experimental support only"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/parameters/{name}/value": {
      "getParameterValueLong": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/features/{featureId}/{name}": {
      "changeFeatureSetting": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      },
      "getFeatureSetting": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/parameters/{name}": {
      "putParameter": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "getParameterValue": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "deleteParameter": {
        "DELETE": {}
      },
      "getParameter": {
        "GET": {
          "response": [
            "json",
            "property"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/artifactsDirectory": {
      "getArtifactsDirectory": {
        "GET": {
          "response": [
            "text"
          ],
          "doc": "Experimental support only"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/snapshot-dependencies": {
      "getSnapshotDeps": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "snapshot-dependencies"
          ]
        }
      },
      "addSnapshotDep": {
        "POST": {
          "doc": "Creates new snapshot dependency. 'id' attribute is ignored in the submitted descriptor. Reports error if new dependency cannot be created (e.g. another dependency on the specified build configuration already exists).",
          "request": [
            "json",
            "snapshot-dependency"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "snapshot-dependency"
          ]
        }
      },
      "replaceSnapshotDeps": {
        "PUT": {
          "response": [
            "json",
            "snapshot-dependencies"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "doc": "Replaces snapshot dependency with those sent in request.",
          "request": [
            "json",
            "snapshot-dependencies"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users/{userLocator}/{field}": {
      "setUserField": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "serveUserField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcs-root-entries/{id}": {
      "getVcsRootEntry": {
        "GET": {
          "response": [
            "json",
            "vcs-root-entry"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteVcsRootEntry": {
        "DELETE": {}
      },
      "updateVcsRootEntry": {
        "PUT": {
          "response": [
            "json",
            "vcs-root-entry"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "vcs-root-entry"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/firstBuilds": {
      "getChangeFirstBuilds": {
        "GET": {
          "doc": "Experimental support only!",
          "response": [
            "json",
            "builds"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/{field}": {
      "serveBuildTypeFieldWithProject": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/debug/requestDetails": {
      "getRequestDetails": {
        "GET": {
          "response": [
            "text"
          ],
          "doc": "Experimental use only!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/artifact-dependencies/{artifactDepLocator}": {
      "replaceArtifactDep": {
        "PUT": {
          "response": [
            "json",
            "artifact-dependency"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "any",
            "artifact-dependency"
          ]
        }
      },
      "getArtifactDep": {
        "GET": {
          "response": [
            "json",
            "artifact-dependency"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteArtifactDep": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances": {
      "serveInstances": {
        "GET": {
          "response": [
            "json",
            "vcs-root-instances"
          ],
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/steps/{stepId}/parameters": {
      "replaceStepParameters": {
        "PUT": {
          "request": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      },
      "getStepParameters": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/metadata{path:(/.*)?}": {
      "getVcsFile": {
        "GET": {
          "doc": "Gets VCS file details Experimental support only",
          "response": [
            "json",
            "file"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/templates": {
      "createEmptyBuildTypeTemplate": {
        "POST": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ],
          "request": [
            "text"
          ]
        }
      },
      "createBuildTypeTemplate": {
        "POST": {
          "request": [
            "json",
            "newBuildTypeDescription"
          ],
          "doc": "Creates a new build configuration template by copying existing one.",
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ]
        }
      },
      "serveTemplatesInProject": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildTypes"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/problems/{problemLocator}": {
      "serveInstance": {
        "GET": {
          "response": [
            "json",
            "problem"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/userGroups/{groupLocator}/properties/{name}": {
      "removeUserProperty": {
        "DELETE": {}
      },
      "putUserProperty": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      },
      "serveUserProperties": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/parameters": {
      "serveBuildTypeParameters": {
        "GET": {
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteAllBuildTypeParameters": {
        "DELETE": {}
      },
      "changeBuildTypeParameters": {
        "PUT": {
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "properties"
          ]
        }
      },
      "setParameter": {
        "POST": {
          "request": [
            "json",
            "property"
          ],
          "response": [
            "json",
            "property"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/investigations": {
      "getInvestigations": {
        "GET": {
          "doc": "Experimental, the requests and results returned will change in future versions!",
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "investigations"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildQueue/{queuedBuildLocator}/compatibleAgents": {
      "serveCompatibleAgents": {
        "GET": {
          "response": [
            "json",
            "agents"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/builds/{buildLocator}": {
      "serveBuildWithProject": {
        "GET": {
          "response": [
            "json",
            "build"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/server/plugins": {
      "servePlugins": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "plugins"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/steps": {
      "getSteps": {
        "GET": {
          "response": [
            "json",
            "steps"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "replaceSteps": {
        "PUT": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "steps"
          ],
          "request": [
            "json",
            "steps"
          ]
        }
      },
      "addStep": {
        "POST": {
          "response": [
            "json",
            "step"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "step"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcs-root-entries/{id}/checkout-rules": {
      "updateVcsRootEntryCheckoutRules": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "getVcsRootEntryCheckoutRules": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users/{userLocator}/roles/{roleId}/{scope}": {
      "deleteRole": {
        "DELETE": {}
      },
      "addRoleSimple": {
        "PUT": {
          "response": [
            "json",
            "role"
          ]
        }
      },
      "addRoleSimplePost": {
        "POST": {}
      },
      "listRole": {
        "GET": {
          "response": [
            "json",
            "role"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildQueue/{buildLocator}/tags/": {
      "addTag": {
        "POST": {
          "doc": "Adds a single tag to a build",
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "replaceTags": {
        "PUT": {
          "response": [
            "json",
            "tags"
          ],
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "tags"
          ],
          "doc": "Replaces build's tags."
        }
      },
      "serveTags": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "tags"
          ]
        }
      },
      "addTags": {
        "POST": {
          "doc": "Adds a set of tags to a build",
          "request": [
            "json",
            "tags"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcs/files/latest/children{path:(/.*)?}": {
      "getVcsFileListing": {
        "GET": {
          "doc": "Lists files in VCS Experimental support only",
          "param": [
            [
              "resolveParameters",
              "boolean"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "files"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/steps/{stepId}/{fieldName}": {
      "getStepSetting": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "changeStepSetting": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}": {
      "serveChange": {
        "GET": {
          "response": [
            "json",
            "change"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/parentRevisions": {
      "getChangeParentRevisions": {
        "GET": {
          "doc": "Experimental support only!",
          "response": [
            "json",
            "items"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/properties": {
      "serveProperties": {
        "GET": {
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "changProperties": {
        "PUT": {
          "request": [
            "json",
            "properties"
          ],
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteAllProperties": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/builds": {
      "serveBuilds": {
        "GET": {
          "doc": "Serves builds matching supplied condition.",
          "param": [
            [
              "status",
              "string"
            ],
            [
              "triggeredByUser",
              "string"
            ],
            [
              "includePersonal",
              "boolean"
            ],
            [
              "includeCanceled",
              "boolean"
            ],
            [
              "onlyPinned",
              "boolean"
            ],
            [
              "tag",
              "string"
            ],
            [
              "agentName",
              "string"
            ],
            [
              "sinceBuild",
              "string"
            ],
            [
              "sinceDate",
              "string"
            ],
            [
              "start",
              "long"
            ],
            [
              "count",
              "int"
            ],
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "builds"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/debug/database/tables": {
      "listDBTables": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots": {
      "serveRoots": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "vcs-roots"
          ]
        }
      },
      "addRoot": {
        "POST": {
          "response": [
            "json",
            "vcs-root"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "vcs-root"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/parameters/{name}/value": {
      "getParameterValueLong": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/tests/{testLocator}": {
      "serveInstance": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "test"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/parentProject": {
      "setParentProject": {
        "PUT": {
          "request": [
            "json",
            "project"
          ],
          "response": [
            "json",
            "project"
          ]
        }
      },
      "getParentProject": {
        "GET": {
          "response": [
            "json",
            "project"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/{field}": {
      "setBuildTypeField": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      },
      "serveBuildTypeField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes": {
      "serveChanges": {
        "GET": {
          "doc": "Lists changes by the specified locator",
          "response": [
            "json",
            "changes"
          ],
          "param": [
            [
              "project",
              "string"
            ],
            [
              "buildType",
              "string"
            ],
            [
              "build",
              "string"
            ],
            [
              "vcsRoot",
              "string"
            ],
            [
              "sinceChange",
              "string"
            ],
            [
              "start",
              "long"
            ],
            [
              "count",
              "int"
            ],
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/duplicates": {
      "getChangeDuplicates": {
        "GET": {
          "response": [
            "json",
            "changes"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "doc": "Experimental support only!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/userGroups/{groupLocator}/roles": {
      "addRolePut": {
        "PUT": {
          "response": [
            "json",
            "roles"
          ],
          "request": [
            "json",
            "roles"
          ]
        }
      },
      "listRoles": {
        "GET": {
          "response": [
            "json",
            "roles"
          ]
        }
      },
      "addRole": {
        "POST": {
          "response": [
            "json",
            "role"
          ],
          "request": [
            "json",
            "role"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/settingsFile": {
      "getSettingsFile": {
        "GET": {
          "response": [
            "text"
          ],
          "doc": "Experimental support only"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/features/{featureId}": {
      "deleteFeature": {
        "DELETE": {}
      },
      "replaceFeature": {
        "PUT": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "feature"
          ],
          "request": [
            "any",
            "feature"
          ]
        }
      },
      "getFeature": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "feature"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/properties/{name}": {
      "deleteParameter": {
        "DELETE": {}
      },
      "putParameter": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      },
      "serveProperty": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/userGroups/{groupLocator}": {
      "serveGroup": {
        "GET": {
          "response": [
            "json",
            "group"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteGroup": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcsLabeling": {
      "getVCSLabelingOptions": {
        "GET": {
          "doc": "Gets VCS labeling settings Experimental support only",
          "response": [
            "json",
            "vcsLabeling"
          ]
        }
      },
      "setVCSLabelingOptions": {
        "PUT": {
          "doc": "Sets VCS labeling settings Experimental support only",
          "request": [
            "json",
            "vcsLabeling"
          ],
          "response": [
            "json",
            "vcsLabeling"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/version": {
      "serveVersion": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/children{path:(/.*)?}": {
      "getVcsFileListing": {
        "GET": {
          "doc": "Lists files in VCS Experimental support only",
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "files"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agents/{agentLocator}": {
      "deleteAgent": {
        "DELETE": {}
      },
      "serveAgent": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agent"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/buildTypes": {
      "createBuildType": {
        "POST": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ],
          "doc": "Creates a new build configuration by copying existing one.",
          "request": [
            "json",
            "newBuildTypeDescription"
          ]
        }
      },
      "serveBuildTypesInProject": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildTypes"
          ]
        }
      },
      "createEmptyBuildType": {
        "POST": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ],
          "request": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/debug/threadDump": {
      "scheduleCheckingForChanges": {
        "GET": {
          "response": [
            "text"
          ],
          "param": [
            [
              "lockedMonitors",
              "string"
            ],
            [
              "lockedSynchronizers",
              "string"
            ]
          ],
          "doc": "Experimental use only!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildQueue/{buildLocator}/example/buildCancelRequest": {
      "cancelBuild": {
        "GET": {
          "response": [
            "json",
            "buildCancelRequest"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/artifact-dependencies": {
      "getArtifactDeps": {
        "GET": {
          "response": [
            "json",
            "artifact-dependencies"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "addArtifactDep": {
        "POST": {
          "request": [
            "any",
            "artifact-dependency"
          ],
          "response": [
            "json",
            "artifact-dependency"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "replaceArtifactDeps": {
        "PUT": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "artifact-dependencies"
          ],
          "doc": "Replaces the dependencies to those sent in the request.",
          "request": [
            "json",
            "artifact-dependencies"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users": {
      "serveUsers": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "users"
          ]
        }
      },
      "createUser": {
        "POST": {
          "response": [
            "any",
            "user"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "user"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/{field}": {
      "serveBuildFieldByBuildOnly": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/triggers/{triggerLocator}": {
      "replaceTrigger": {
        "PUT": {
          "request": [
            "json",
            "trigger"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "trigger"
          ]
        }
      },
      "getTrigger": {
        "GET": {
          "response": [
            "json",
            "trigger"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteTrigger": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/settings/{name}": {
      "serveBuildTypeSetting": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "putBuildTypeSetting": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "any"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/steps/{stepId}": {
      "getStep": {
        "GET": {
          "response": [
            "json",
            "step"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteStep": {
        "DELETE": {}
      },
      "replaceStep": {
        "PUT": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "step"
          ],
          "request": [
            "json",
            "step"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/sources/files/{fileName:.+}": {
      "serveSourceFile": {
        "GET": {
          "response": [
            "any"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/problemOccurrences": {
      "getProblems": {
        "GET": {
          "response": [
            "json",
            "problemOccurrences"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/settingsFile": {
      "getSettingsFile": {
        "GET": {
          "response": [
            "text"
          ],
          "doc": "Experimental support only"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users/{userLocator}/properties/{name}": {
      "removeUserProperty": {
        "DELETE": {}
      },
      "serveUserProperty": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "putUserProperty": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/testOccurrences": {
      "getTestOccurrences": {
        "GET": {
          "doc": "Experimental, the requests and results returned will change in future versions!",
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "testOccurrences"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agentPools": {
      "setPools": {
        "POST": {
          "response": [
            "json",
            "agentPool"
          ],
          "request": [
            "json",
            "agentPool"
          ]
        }
      },
      "getPools": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agentPools"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/server": {
      "serveServerInfo": {
        "GET": {
          "response": [
            "json",
            "server"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agents": {
      "serveAgents": {
        "GET": {
          "param": [
            [
              "includeDisconnected",
              "boolean"
            ],
            [
              "includeUnauthorized",
              "boolean"
            ],
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agents"
          ],
          "doc": "Returns list of agents"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes": {
      "getBuildTypes": {
        "GET": {
          "doc": "Lists build types registered on the server. Build templates are not included by default",
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildTypes"
          ]
        }
      },
      "addBuildType": {
        "POST": {
          "request": [
            "json",
            "buildType"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agentPools/{agentPoolLocator}/projects": {
      "addProject": {
        "POST": {
          "response": [
            "json",
            "project"
          ],
          "request": [
            "json",
            "project"
          ],
          "doc": "Adds the posted project to the pool associated projects"
        }
      },
      "replaceProjects": {
        "PUT": {
          "request": [
            "json",
            "projects"
          ],
          "doc": "Associates the posted set of projects with the pool which replaces earlier associations on this pool",
          "response": [
            "json",
            "projects"
          ]
        }
      },
      "getPoolProjects": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "projects"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/server/{field}": {
      "serveServerVersion": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/triggers": {
      "getTriggers": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "triggers"
          ]
        }
      },
      "addTrigger": {
        "POST": {
          "response": [
            "json",
            "trigger"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "trigger"
          ],
          "doc": "Creates new trigger. 'id' attribute is ignored in the submitted descriptor. Reports error if new trigger cannot be created (e.g. only single trigger of the type is allowed for a build configuration)."
        }
      },
      "replaceTriggers": {
        "PUT": {
          "request": [
            "json",
            "triggers"
          ],
          "doc": "Replaces trigger with those sent inthe request.",
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "triggers"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/testOccurrences/{testLocator}": {
      "serveInstance": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "testOccurrence"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/vcsRoot": {
      "getChangeVCSRoot": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "vcs-root-instance"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/example/newProjectDescription": {
      "getExampleNewProjectDescription": {
        "GET": {
          "doc": "Experimental support only. Use this to get an example of the bean to be posted to the /projects request to create a new project",
          "response": [
            "json",
            "newProjectDescription"
          ],
          "param": [
            [
              "id",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/{field}": {
      "setProjectFiled": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      },
      "serveProjectField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/settingsFile": {
      "getSettingsFile": {
        "GET": {
          "doc": "Experimental support only",
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds": {
      "deleteBuilds": {
        "DELETE": {
          "param": [
            [
              "locator",
              "string"
            ]
          ]
        }
      },
      "serveAllBuilds": {
        "GET": {
          "doc": "Serves builds matching supplied condition.",
          "param": [
            [
              "buildType",
              "string"
            ],
            [
              "status",
              "string"
            ],
            [
              "triggeredByUser",
              "string"
            ],
            [
              "includePersonal",
              "boolean"
            ],
            [
              "includeCanceled",
              "boolean"
            ],
            [
              "onlyPinned",
              "boolean"
            ],
            [
              "tag",
              "string"
            ],
            [
              "agentName",
              "string"
            ],
            [
              "sinceBuild",
              "string"
            ],
            [
              "sinceDate",
              "string"
            ],
            [
              "start",
              "long"
            ],
            [
              "count",
              "int"
            ],
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "builds"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/triggers/{triggerLocator}/{fieldName}": {
      "getTriggerSetting": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "changeTriggerSetting": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/pin/": {
      "getPinned": {
        "GET": {
          "doc": "Fetches current build pinned status.",
          "response": [
            "text"
          ]
        }
      },
      "unpinBuild": {
        "DELETE": {
          "doc": "Unpins a build",
          "request": [
            "text"
          ]
        }
      },
      "pinBuild": {
        "PUT": {
          "doc": "Pins a build",
          "request": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildQueue/{queuedBuildLocator}": {
      "getBuild": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "build"
          ]
        }
      },
      "cancelBuild": {
        "POST": {
          "request": [
            "json",
            "buildCancelRequest"
          ],
          "response": [
            "json",
            "build"
          ]
        }
      },
      "deleteBuild": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}": {
      "serveInstance": {
        "GET": {
          "response": [
            "json",
            "vcs-root-instance"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/userGroups/{groupLocator}/properties": {
      "getProperties": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/vcsRootInstance": {
      "getChangeVCSRootInstance": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "vcs-root-instance"
          ],
          "doc": "Experimental support only!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/artifacts/content{path:(/.*)?}": {
      "getArtifactContent": {
        "GET": {
          "response": [
            "any"
          ],
          "param": [
            [
              "resolveParameters",
              "boolean"
            ],
            [
              "logBuildUsage",
              "boolean"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/artifacts/archived{path:(/.*)?}": {
      "getZippedArtifacts": {
        "GET": {
          "response": [
            "any"
          ],
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "name",
              "string"
            ],
            [
              "resolveParameters",
              "boolean"
            ],
            [
              "logBuildUsage",
              "boolean"
            ]
          ],
          "doc": "Experimental"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users/{userLocator}/roles": {
      "replaceRoles": {
        "PUT": {
          "request": [
            "json",
            "roles"
          ],
          "doc": "Replaces user's roles with the submitted ones",
          "response": [
            "json",
            "roles"
          ]
        }
      },
      "addRole": {
        "POST": {
          "request": [
            "json",
            "role"
          ],
          "response": [
            "json",
            "role"
          ]
        }
      },
      "listRoles": {
        "GET": {
          "response": [
            "json",
            "roles"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/debug/database/query/{query}": {
      "executeDBQuery": {
        "GET": {
          "param": [
            [
              "fieldDelimiter",
              "string"
            ],
            [
              "count",
              "int"
            ]
          ],
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/buildTypes/{btLocator}": {
      "serveBuildType": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/agentPools": {
      "getProjectAgentPools": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agentPools"
          ]
        }
      },
      "setProjectAgentPools": {
        "POST": {
          "response": [
            "json",
            "agentPool"
          ],
          "request": [
            "json",
            "agentPool"
          ]
        },
        "PUT": {
          "request": [
            "json",
            "agentPools"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agentPools"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/related-issues": {
      "serveBuildRelatedIssuesOld": {
        "GET": {
          "response": [
            "json",
            "issuesUsages"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/agent-requirements": {
      "addAgentRequirement": {
        "POST": {
          "doc": "Creates new agent requirement. 'id' attribute is ignored in the submitted descriptor. Reports error if new requirement cannot be created (e.g. another requirement is present for the parameter).",
          "request": [
            "json",
            "agent-requirement"
          ],
          "response": [
            "json",
            "agent-requirement"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "replaceAgentRequirements": {
        "PUT": {
          "request": [
            "json",
            "agent-requirements"
          ],
          "doc": "Replaces agent requirements with those sent in the request.",
          "response": [
            "json",
            "agent-requirements"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "getAgentRequirements": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agent-requirements"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/problemOccurrences/{problemLocator}": {
      "serveInstance": {
        "GET": {
          "response": [
            "json",
            "problemOccurrence"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agentPools/{agentPoolLocator}": {
      "getPool": {
        "GET": {
          "response": [
            "json",
            "agentPool"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deletePool": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcs-root-instances": {
      "getCurrentVcsInstances": {
        "GET": {
          "doc": "Experimental support only!",
          "response": [
            "json",
            "vcs-root-instances"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/{projectLocator}/{btLocator}/{buildLocator}/{field}": {
      "serveBuildFieldShort": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users/{userLocator}/groups": {
      "replaceGroups": {
        "PUT": {
          "doc": "Replaces user's roles with the submitted ones",
          "request": [
            "json",
            "groups"
          ],
          "response": [
            "json",
            "groups"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "addGroup": {
        "POST": {
          "request": [
            "json",
            "group"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "group"
          ]
        }
      },
      "getGroups": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "groups"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/resulting-properties/{propertyName}": {
      "getParameter": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agents/{agentLocator}/{field}": {
      "setAgentField": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "serveAgentField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/artifacts/files{path:(/.*)?}": {
      "getArtifactFilesContent": {
        "GET": {
          "response": [
            "any"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/info": {
      "servePluginInfo": {
        "GET": {
          "response": [
            "json",
            "plugin"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/relatedIssues": {
      "serveBuildRelatedIssues": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "issuesUsages"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcs-root-entries": {
      "getVcsRootEntries": {
        "GET": {
          "response": [
            "json",
            "vcs-root-entries"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "addVcsRootEntry": {
        "POST": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "vcs-root-entry"
          ],
          "request": [
            "json",
            "vcs-root-entry"
          ]
        }
      },
      "replaceVcsRootEntries": {
        "PUT": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "vcs-root-entries"
          ],
          "request": [
            "json",
            "vcs-root-entries"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/statistics/{name}": {
      "serveBuildStatisticValue": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}/properties": {
      "serveRootInstanceProperties": {
        "GET": {
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/steps/{stepId}/parameters/{parameterName}": {
      "addStepParameter": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "getStepParameter": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/issues": {
      "getChangeIssue": {
        "GET": {
          "response": [
            "json",
            "issues"
          ],
          "doc": "Experimental support only!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest": {
      "serveRoot": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}/{field}": {
      "setInstanceField": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "serveInstanceField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users/{userLocator}/properties": {
      "serveUserProperties": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/statistics/": {
      "serveBuildStatisticValues": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/buildTags": {
      "serveBuildTypeBuildsTags": {
        "GET": {
          "response": [
            "json",
            "tags"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/newBuildTypeDescription": {
      "getExampleNewProjectDescriptionCompatibilityVersion1": {
        "GET": {
          "doc": "For compatibility with experimental feature of 8.0",
          "response": [
            "json",
            "newBuildTypeDescription"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/users/{userLocator}": {
      "serveUser": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "user"
          ]
        }
      },
      "updateUser": {
        "PUT": {
          "request": [
            "json",
            "user"
          ],
          "response": [
            "json",
            "user"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteUser": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/vcs/files/latest/content{path:(/.*)?}": {
      "getVcsFileContent": {
        "GET": {
          "param": [
            [
              "resolveParameters",
              "boolean"
            ]
          ],
          "response": [
            "any"
          ],
          "doc": "Gets content of a file form VCS Experimental support only"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/repositoryState/creationDate": {
      "getRepositoryStateCreationDate": {
        "GET": {
          "response": [
            "any"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/statusIcon": {
      "serveBuildStatusIcon": {
        "GET": {
          "response": [
            "any"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects": {
      "createEmptyProject": {
        "POST": {
          "response": [
            "json",
            "project"
          ],
          "request": [
            "text"
          ]
        }
      },
      "createProject": {
        "POST": {
          "request": [
            "json",
            "newProjectDescription"
          ],
          "response": [
            "json",
            "project"
          ]
        }
      },
      "serveProjects": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "projects"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}": {
      "serveRootInstance": {
        "GET": {
          "response": [
            "json",
            "vcs-root-instance"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/instances": {
      "serveRootInstances": {
        "GET": {
          "response": [
            "json",
            "vcs-root-instances"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/settings": {
      "serveBuildTypeSettings": {
        "GET": {
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "replaceBuildTypeSettings": {
        "PUT": {
          "request": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/parameters/{name}": {
      "deleteBuildTypeParameter": {
        "DELETE": {}
      },
      "getParameterValue": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "setParameterValue": {
        "PUT": {
          "request": [
            "text"
          ],
          "response": [
            "text"
          ]
        }
      },
      "getParameter": {
        "GET": {
          "response": [
            "json",
            "property"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/properties": {
      "serveRootInstanceProperties": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/cctray": {
      "serveProjectsConvenienceCopy": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ]
          ],
          "response": [
            "json",
            "Projects"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/debug/vcsCheckingForChangesQueue": {
      "scheduleCheckingForChanges": {
        "POST": {
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "vcs-root-instances"
          ],
          "doc": "Experimental use only!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/agentPools/{agentPoolLocator}/projects/{projectLocator}": {
      "getPoolProject": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "project"
          ]
        }
      },
      "deletePoolProject": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/agentPools/{agentPoolLocator}/agents": {
      "getPoolAgents": {
        "GET": {
          "response": [
            "json",
            "agents"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "addAgent": {
        "POST": {
          "doc": "Moves the agent posted to the pool",
          "request": [
            "json",
            "agent"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agent"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildQueue/{buildLocator}/{field}": {
      "serveBuildFieldByBuildOnly": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/features/{featureId}/parameters/{parameterName}": {
      "addFeatureParameter": {
        "PUT": {
          "request": [
            "any"
          ],
          "response": [
            "text"
          ]
        }
      },
      "getFeatureParameter": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/builds/{buildLocator}/{field}": {
      "serveBuildField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}": {
      "cancelBuild": {
        "POST": {
          "response": [
            "any",
            "build"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "buildCancelRequest"
          ]
        }
      },
      "deleteBuild": {
        "DELETE": {}
      },
      "serveBuild": {
        "GET": {
          "response": [
            "json",
            "build"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "doc": "Serves a build described by the locator provided searching through those accessible by the current user. See {@link jetbrains.buildServer.server.rest.request.BuildRequest#serveAllBuilds(String, String, String, boolean, boolean, boolean, java.util.List, String, String, String, Long, Integer, String, javax.ws.rs.core.UriInfo, javax.servlet.http.HttpServletRequest)} If several builds are matched, the first one is used (the effect is the same as if \",count:1\" locator dimension is added)"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/comment": {
      "deleteComment": {
        "DELETE": {}
      },
      "replaceComment": {
        "PUT": {
          "request": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/tests": {
      "getTests": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "tests"
          ],
          "doc": "Experimental, the requests and results returned will change in future versions!"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/{field}": {
      "setInstanceField": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      },
      "deleteInstanceField": {
        "DELETE": {}
      },
      "serveInstanceField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}/{field}": {
      "serveField": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "setField": {
        "PUT": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/example/newBuildTypeDescription": {
      "getExampleNewProjectDescription": {
        "GET": {
          "response": [
            "json",
            "newBuildTypeDescription"
          ],
          "doc": "Experimental support only. Use this to get an example of the bean to be posted to the /buildTypes request to create a new build type"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/agent-requirements/{agentRequirementLocator}": {
      "replaceAgentRequirement": {
        "PUT": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "agent-requirement"
          ],
          "request": [
            "json",
            "agent-requirement"
          ]
        }
      },
      "getAgentRequirement": {
        "GET": {
          "response": [
            "json",
            "agent-requirement"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteAgentRequirement": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/buildQueue": {
      "queueNewBuild": {
        "POST": {
          "request": [
            "json",
            "build"
          ],
          "response": [
            "json",
            "build"
          ]
        }
      },
      "deleteBuildsExperimental": {
        "DELETE": {
          "doc": "Experimental! Deletes the set of builds filtered",
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "getBuilds": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "builds"
          ],
          "doc": "Serves build queue."
        }
      },
      "replaceBuilds": {
        "PUT": {
          "request": [
            "json",
            "builds"
          ],
          "response": [
            "json",
            "builds"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/example/buildCancelRequest": {
      "cancelBuild": {
        "GET": {
          "response": [
            "json",
            "buildCancelRequest"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/apiVersion": {
      "serveApiVersion": {
        "GET": {
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/artifacts{path:(/.*)?}": {
      "getArtifacts": {
        "GET": {
          "doc": "More user-friendly URL for \"/{buildLocator}/artifacts/children\" one.",
          "response": [
            "json",
            "files"
          ],
          "param": [
            [
              "resolveParameters",
              "boolean"
            ],
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-roots/{vcsRootLocator}": {
      "deleteRoot": {
        "DELETE": {}
      },
      "serveRoot": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "vcs-root"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/templates/{btLocator}": {
      "serveBuildTypeTemplates": {
        "GET": {
          "response": [
            "json",
            "buildType"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/debug/memory/dumps": {
      "saveMemoryDump": {
        "POST": {
          "doc": "Experimental use only!",
          "param": [
            [
              "archived",
              "boolean"
            ]
          ],
          "response": [
            "text"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/parameters": {
      "changeAllParameters": {
        "PUT": {
          "response": [
            "json",
            "properties"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "properties"
          ]
        }
      },
      "deleteAllParameters": {
        "DELETE": {}
      },
      "setParameter": {
        "POST": {
          "request": [
            "json",
            "property"
          ],
          "response": [
            "json",
            "property"
          ]
        }
      },
      "serveParameters": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds/{buildLocator}": {
      "serveBuildWithProject": {
        "GET": {
          "response": [
            "json",
            "build"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/buildTypes": {
      "getRelatedBuildTypes": {
        "GET": {
          "doc": "Experimental support only!",
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildTypes"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/server/backup": {
      "getBackupStatus": {
        "GET": {
          "response": [
            "text"
          ]
        }
      },
      "startBackup": {
        "POST": {
          "response": [
            "text"
          ],
          "param": [
            [
              "fileName",
              "string"
            ],
            [
              "addTimestamp",
              "boolean"
            ],
            [
              "includeConfigs",
              "boolean"
            ],
            [
              "includeDatabase",
              "boolean"
            ],
            [
              "includeBuildLogs",
              "boolean"
            ],
            [
              "includePersonalChanges",
              "boolean"
            ],
            [
              "includeRunningBuilds",
              "boolean"
            ],
            [
              "includeSupplimentaryData",
              "boolean"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/features": {
      "replaceFeatures": {
        "PUT": {
          "response": [
            "json",
            "features"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "request": [
            "json",
            "features"
          ]
        }
      },
      "addFeature": {
        "POST": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "feature"
          ],
          "request": [
            "any",
            "feature"
          ]
        }
      },
      "getFeatures": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "features"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/tags/": {
      "replaceTags": {
        "PUT": {
          "request": [
            "json",
            "tags"
          ],
          "doc": "Replaces the build's tags designated by the tags 'locator' to the set of tags passed.",
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "tags"
          ]
        }
      },
      "addTag": {
        "POST": {
          "response": [
            "text"
          ],
          "request": [
            "text"
          ],
          "doc": "Adds a single tag to a build"
        }
      },
      "addTags": {
        "POST": {
          "request": [
            "json",
            "tags"
          ],
          "doc": "Adds a set of tags to a build"
        }
      },
      "serveTags": {
        "GET": {
          "response": [
            "json",
            "tags"
          ],
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/userGroups/{groupLocator}/roles/{roleId}/{scope}": {
      "addRoleSimple": {
        "POST": {
          "response": [
            "json",
            "role"
          ]
        }
      },
      "deleteRole": {
        "DELETE": {}
      },
      "listRole": {
        "GET": {
          "response": [
            "json",
            "role"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/parentChanges": {
      "getParentChanges": {
        "GET": {
          "doc": "Experimental support only!",
          "response": [
            "json",
            "changes"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/cctray/projects.xml": {
      "serveProjects": {
        "GET": {
          "param": [
            [
              "locator",
              "string"
            ]
          ],
          "response": [
            "json",
            "Projects"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/content{path:(/.*)?}": {
      "getVcsFileContent": {
        "GET": {
          "response": [
            "any"
          ],
          "doc": "Gets content of a file form VCS Experimental support only"
        }
      }
    },
    "http://tc.mycompany.com/app/rest/problems": {
      "getProblems": {
        "GET": {
          "doc": "Experimental, the requests and results returned will change in future versions!",
          "response": [
            "json",
            "problems"
          ],
          "param": [
            [
              "locator",
              "string"
            ],
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/builds/{buildLocator}/resulting-properties/": {
      "serveBuildActualParameters": {
        "GET": {
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "properties"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/projects/{projectLocator}": {
      "serveProject": {
        "GET": {
          "response": [
            "json",
            "project"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      },
      "deleteProject": {
        "DELETE": {}
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}/investigations": {
      "getInvestigations": {
        "GET": {
          "response": [
            "json",
            "investigations"
          ],
          "param": [
            [
              "fields",
              "string"
            ]
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/changes/{changeLocator}/attributes": {
      "getChangeAttributes": {
        "GET": {
          "doc": "Experimental support only!",
          "response": [
            "json",
            "entries"
          ]
        }
      }
    },
    "http://tc.mycompany.com/app/rest/buildTypes/{btLocator}": {
      "serveBuildTypeXML": {
        "GET": {
          "doc": "Serves build configuration or templates according to the locator.",
          "param": [
            [
              "fields",
              "string"
            ]
          ],
          "response": [
            "json",
            "buildType"
          ]
        }
      },
      "deleteBuildType": {
        "DELETE": {}
      }
    }
  }
}
