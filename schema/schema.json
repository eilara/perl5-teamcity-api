{
  "entities": [
    {
      "name": "/",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest",
          "actions": [
            {
              "id": "serveRoot",
              "response": "text",
              "name": "GET"
            }
          ]
        }
      ]
    },
    {
      "resources": [
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "agentPools",
              "id": "getPools"
            },
            {
              "request": "agentPool",
              "response": "agentPool",
              "name": "POST",
              "id": "setPools"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/agentPools"
        },
        {
          "actions": [
            {
              "id": "deletePool",
              "name": "DELETE"
            },
            {
              "param": {
                "fields": "string"
              },
              "response": "agentPool",
              "name": "GET",
              "id": "getPool"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}/agents",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "request": "agent",
              "name": "POST",
              "response": "agent",
              "id": "addAgent",
              "doc": "Moves the agent posted to the pool"
            },
            {
              "name": "GET",
              "response": "agents",
              "param": {
                "fields": "string"
              },
              "id": "getPoolAgents"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}/projects",
          "actions": [
            {
              "name": "POST",
              "response": "project",
              "request": "project",
              "doc": "Adds the posted project to the pool associated projects",
              "id": "addProject"
            },
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "projects",
              "id": "getPoolProjects"
            },
            {
              "id": "replaceProjects",
              "doc": "Associates the posted set of projects with the pool which replaces earlier associations on this pool",
              "request": "projects",
              "name": "PUT",
              "response": "projects"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/agentPools/{agentPoolLocator}/projects/{projectLocator}",
          "actions": [
            {
              "name": "DELETE",
              "id": "deletePoolProject"
            },
            {
              "id": "getPoolProject",
              "response": "project",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            }
          ]
        }
      ],
      "name": "agentPools"
    },
    {
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/agents",
          "actions": [
            {
              "id": "serveAgents",
              "doc": "Returns list of agents",
              "param": {
                "includeDisconnected": "boolean",
                "includeUnauthorized": "boolean",
                "locator": "string",
                "fields": "string"
              },
              "response": "agents",
              "name": "GET"
            }
          ]
        },
        {
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteAgent"
            },
            {
              "response": "agent",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "serveAgent"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/agents/{agentLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/agents/{agentLocator}/pool",
          "actions": [
            {
              "name": "GET",
              "response": "agentPool",
              "param": {
                "fields": "string"
              },
              "id": "getAgentPool"
            },
            {
              "name": "PUT",
              "response": "agentPool",
              "request": "agentPool",
              "id": "setAgentPool"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/agents/{agentLocator}/{field}",
          "actions": [
            {
              "id": "serveAgentField",
              "name": "GET",
              "response": "text"
            },
            {
              "id": "setAgentField",
              "request": "text",
              "name": "PUT",
              "response": "text"
            }
          ]
        }
      ],
      "name": "agents"
    },
    {
      "name": "apiVersion",
      "resources": [
        {
          "actions": [
            {
              "id": "serveApiVersion",
              "name": "GET",
              "response": "text"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/apiVersion"
        }
      ]
    },
    {
      "resources": [
        {
          "actions": [
            {
              "param": {
                "locator": "string",
                "fields": "string"
              },
              "name": "DELETE",
              "id": "deleteBuildsExperimental",
              "doc": "Experimental! Deletes the set of builds filtered"
            },
            {
              "id": "getBuilds",
              "doc": "Serves build queue.",
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "name": "GET",
              "response": "builds"
            },
            {
              "id": "queueNewBuild",
              "request": "build",
              "response": "build",
              "name": "POST"
            },
            {
              "id": "replaceBuilds",
              "response": "builds",
              "name": "PUT",
              "request": "builds",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildQueue"
        },
        {
          "actions": [
            {
              "id": "cancelBuild",
              "response": "buildCancelRequest",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildQueue/{buildLocator}/example/buildCancelRequest"
        },
        {
          "actions": [
            {
              "request": "text",
              "response": "text",
              "name": "POST",
              "id": "addTag",
              "doc": "Adds a single tag to a build"
            },
            {
              "id": "addTags",
              "doc": "Adds a set of tags to a build",
              "request": "tags",
              "name": "POST"
            },
            {
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "request": "tags",
              "response": "tags",
              "name": "PUT",
              "id": "replaceTags",
              "doc": "Replaces build's tags."
            },
            {
              "name": "GET",
              "response": "tags",
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "id": "serveTags"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildQueue/{buildLocator}/tags/"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildQueue/{buildLocator}/{field}",
          "actions": [
            {
              "id": "serveBuildFieldByBuildOnly",
              "response": "text",
              "name": "GET"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildQueue/{queuedBuildLocator}",
          "actions": [
            {
              "id": "cancelBuild",
              "name": "POST",
              "response": "build",
              "request": "buildCancelRequest"
            },
            {
              "name": "DELETE",
              "id": "deleteBuild"
            },
            {
              "id": "getBuild",
              "response": "build",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveCompatibleAgents",
              "name": "GET",
              "response": "agents",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildQueue/{queuedBuildLocator}/compatibleAgents"
        }
      ],
      "name": "buildQueue"
    },
    {
      "name": "buildTypes",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes",
          "actions": [
            {
              "id": "addBuildType",
              "response": "buildType",
              "name": "POST",
              "request": "buildType",
              "param": {
                "fields": "string"
              }
            },
            {
              "doc": "Lists build types registered on the server. Build templates are not included by default",
              "id": "getBuildTypes",
              "response": "buildTypes",
              "name": "GET",
              "param": {
                "locator": "string",
                "fields": "string"
              }
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}",
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteBuildType"
            },
            {
              "doc": "Serves build configuration or templates according to the locator.",
              "id": "serveBuildTypeXML",
              "name": "GET",
              "response": "buildType",
              "param": {
                "fields": "string"
              }
            }
          ]
        },
        {
          "actions": [
            {
              "id": "addAgentRequirement",
              "doc": "Creates new agent requirement. 'id' attribute is ignored in the submitted descriptor. Reports error if new requirement cannot be created (e.g. another requirement is present for the parameter).",
              "request": "agent-requirement",
              "param": {
                "fields": "string"
              },
              "name": "POST",
              "response": "agent-requirement"
            },
            {
              "response": "agent-requirements",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "getAgentRequirements"
            },
            {
              "response": "agent-requirements",
              "name": "PUT",
              "param": {
                "fields": "string"
              },
              "request": "agent-requirements",
              "doc": "Replaces agent requirements with those sent in the request.",
              "id": "replaceAgentRequirements"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/agent-requirements"
        },
        {
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteAgentRequirement"
            },
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "agent-requirement",
              "id": "getAgentRequirement"
            },
            {
              "response": "agent-requirement",
              "name": "PUT",
              "param": {
                "fields": "string"
              },
              "request": "agent-requirement",
              "id": "replaceAgentRequirement"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/agent-requirements/{agentRequirementLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/aliases",
          "actions": [
            {
              "doc": "Experimental support only",
              "id": "getAliases",
              "name": "GET",
              "response": "items"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/artifact-dependencies",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "request": "artifact-dependency",
              "name": "POST",
              "response": "artifact-dependency",
              "id": "addArtifactDep"
            },
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "artifact-dependencies",
              "id": "getArtifactDeps"
            },
            {
              "request": "artifact-dependencies",
              "param": {
                "fields": "string"
              },
              "response": "artifact-dependencies",
              "name": "PUT",
              "id": "replaceArtifactDeps",
              "doc": "Replaces the dependencies to those sent in the request."
            }
          ]
        },
        {
          "actions": [
            {
              "id": "deleteArtifactDep",
              "name": "DELETE"
            },
            {
              "id": "getArtifactDep",
              "param": {
                "fields": "string"
              },
              "response": "artifact-dependency",
              "name": "GET"
            },
            {
              "id": "replaceArtifactDep",
              "param": {
                "fields": "string"
              },
              "request": "artifact-dependency",
              "response": "artifact-dependency",
              "name": "PUT"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/artifact-dependencies/{artifactDepLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/branches",
          "actions": [
            {
              "id": "serveBranches",
              "doc": "Lists branches of the build type.",
              "param": {
                "locator": "string"
              },
              "response": "branches",
              "name": "GET"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/buildTags",
          "actions": [
            {
              "id": "serveBuildTypeBuildsTags",
              "response": "tags",
              "name": "GET"
            }
          ]
        },
        {
          "actions": [
            {
              "param": {
                "triggeredByUser": "string",
                "includePersonal": "boolean",
                "count": "int",
                "sinceBuild": "string",
                "includeCanceled": "boolean",
                "start": "long",
                "sinceDate": "string",
                "fields": "string",
                "locator": "string",
                "status": "string",
                "agentName": "string",
                "onlyPinned": "boolean",
                "tag": "string"
              },
              "response": "builds",
              "name": "GET",
              "id": "serveBuilds",
              "doc": "Serves builds matching supplied condition."
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/builds"
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "build",
              "id": "serveBuildWithProject"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/builds/{buildLocator}"
        },
        {
          "actions": [
            {
              "id": "serveBuildField",
              "response": "text",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/builds/{buildLocator}/{field}"
        },
        {
          "actions": [
            {
              "response": "newBuildTypeDescription",
              "name": "GET",
              "doc": "Experimental support only. Use this to get an example of the bean to be posted to the /buildTypes request to create a new build type",
              "id": "getExampleNewProjectDescription"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/example/newBuildTypeDescription"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features",
          "actions": [
            {
              "request": "feature",
              "param": {
                "fields": "string"
              },
              "response": "feature",
              "name": "POST",
              "id": "addFeature"
            },
            {
              "id": "getFeatures",
              "response": "features",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            },
            {
              "param": {
                "fields": "string"
              },
              "request": "features",
              "response": "features",
              "name": "PUT",
              "id": "replaceFeatures"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}",
          "actions": [
            {
              "id": "deleteFeature",
              "name": "DELETE"
            },
            {
              "param": {
                "fields": "string"
              },
              "response": "feature",
              "name": "GET",
              "id": "getFeature"
            },
            {
              "id": "replaceFeature",
              "param": {
                "fields": "string"
              },
              "request": "feature",
              "name": "PUT",
              "response": "feature"
            }
          ]
        },
        {
          "actions": [
            {
              "name": "GET",
              "response": "properties",
              "param": {
                "fields": "string"
              },
              "id": "getFeatureParameters"
            },
            {
              "request": "properties",
              "param": {
                "fields": "string"
              },
              "name": "PUT",
              "response": "properties",
              "id": "replaceFeatureParameters"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}/parameters"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}/parameters/{parameterName}",
          "actions": [
            {
              "id": "addFeatureParameter",
              "response": "text",
              "name": "PUT",
              "request": "any"
            },
            {
              "response": "text",
              "name": "GET",
              "id": "getFeatureParameter"
            }
          ]
        },
        {
          "actions": [
            {
              "response": "text",
              "name": "PUT",
              "request": "text",
              "id": "changeFeatureSetting"
            },
            {
              "id": "getFeatureSetting",
              "name": "GET",
              "response": "text"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/features/{featureId}/{name}"
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "response": "investigations",
              "name": "GET",
              "id": "getInvestigations"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/investigations"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/newBuildTypeDescription",
          "actions": [
            {
              "id": "getExampleNewProjectDescriptionCompatibilityVersion1",
              "doc": "For compatibility with experimental feature of 8.0",
              "name": "GET",
              "response": "newBuildTypeDescription"
            }
          ]
        },
        {
          "actions": [
            {
              "request": "properties",
              "param": {
                "fields": "string"
              },
              "response": "properties",
              "name": "PUT",
              "id": "changeBuildTypeParameters"
            },
            {
              "name": "DELETE",
              "id": "deleteAllBuildTypeParameters"
            },
            {
              "id": "serveBuildTypeParameters",
              "param": {
                "locator": "string",
                "fields": "string"
              },
              "name": "GET",
              "response": "properties"
            },
            {
              "response": "property",
              "name": "POST",
              "request": "property",
              "param": {
                "fields": "string"
              },
              "id": "setParameter"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/parameters"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/parameters/{name}",
          "actions": [
            {
              "id": "deleteBuildTypeParameter",
              "name": "DELETE"
            },
            {
              "name": "GET",
              "response": "property",
              "id": "getParameter"
            },
            {
              "name": "GET",
              "response": "text",
              "id": "getParameterValue"
            },
            {
              "id": "setParameterValue",
              "request": "text",
              "response": "text",
              "name": "PUT"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "getParameterValueLong",
              "response": "text",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/parameters/{name}/value"
        },
        {
          "actions": [
            {
              "name": "PUT",
              "response": "properties",
              "param": {
                "fields": "string"
              },
              "request": "properties",
              "id": "replaceBuildTypeSettings"
            },
            {
              "id": "serveBuildTypeSettings",
              "param": {
                "fields": "string"
              },
              "response": "properties",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/settings"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/settings/{name}",
          "actions": [
            {
              "response": "text",
              "name": "PUT",
              "request": "any",
              "id": "putBuildTypeSetting"
            },
            {
              "response": "text",
              "name": "GET",
              "id": "serveBuildTypeSetting"
            }
          ]
        },
        {
          "actions": [
            {
              "doc": "Experimental support only",
              "id": "getSettingsFile",
              "response": "text",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/settingsFile"
        },
        {
          "actions": [
            {
              "request": "snapshot-dependency",
              "param": {
                "fields": "string"
              },
              "response": "snapshot-dependency",
              "name": "POST",
              "id": "addSnapshotDep",
              "doc": "Creates new snapshot dependency. 'id' attribute is ignored in the submitted descriptor. Reports error if new dependency cannot be created (e.g. another dependency on the specified build configuration already exists)."
            },
            {
              "id": "getSnapshotDeps",
              "param": {
                "fields": "string"
              },
              "response": "snapshot-dependencies",
              "name": "GET"
            },
            {
              "request": "snapshot-dependencies",
              "param": {
                "fields": "string"
              },
              "name": "PUT",
              "response": "snapshot-dependencies",
              "id": "replaceSnapshotDeps",
              "doc": "Replaces snapshot dependency with those sent in request."
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/snapshot-dependencies"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/snapshot-dependencies/{snapshotDepLocator}",
          "actions": [
            {
              "id": "deleteSnapshotDep",
              "name": "DELETE"
            },
            {
              "id": "getSnapshotDep",
              "name": "GET",
              "response": "snapshot-dependency",
              "param": {
                "fields": "string"
              }
            },
            {
              "request": "snapshot-dependency",
              "param": {
                "fields": "string"
              },
              "name": "PUT",
              "response": "snapshot-dependency",
              "id": "replaceSnapshotDep"
            }
          ]
        },
        {
          "actions": [
            {
              "response": "step",
              "name": "POST",
              "param": {
                "fields": "string"
              },
              "request": "step",
              "id": "addStep"
            },
            {
              "name": "GET",
              "response": "steps",
              "param": {
                "fields": "string"
              },
              "id": "getSteps"
            },
            {
              "request": "steps",
              "param": {
                "fields": "string"
              },
              "name": "PUT",
              "response": "steps",
              "id": "replaceSteps"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}",
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteStep"
            },
            {
              "name": "GET",
              "response": "step",
              "param": {
                "fields": "string"
              },
              "id": "getStep"
            },
            {
              "id": "replaceStep",
              "name": "PUT",
              "response": "step",
              "request": "step",
              "param": {
                "fields": "string"
              }
            }
          ]
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "properties",
              "id": "getStepParameters"
            },
            {
              "response": "properties",
              "name": "PUT",
              "param": {
                "fields": "string"
              },
              "request": "properties",
              "id": "replaceStepParameters"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}/parameters"
        },
        {
          "actions": [
            {
              "id": "addStepParameter",
              "response": "text",
              "name": "PUT",
              "request": "text"
            },
            {
              "id": "getStepParameter",
              "response": "text",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}/parameters/{parameterName}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/steps/{stepId}/{fieldName}",
          "actions": [
            {
              "request": "text",
              "response": "text",
              "name": "PUT",
              "id": "changeStepSetting"
            },
            {
              "id": "getStepSetting",
              "name": "GET",
              "response": "text"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "deleteTemplateAssociation",
              "name": "DELETE"
            },
            {
              "id": "getTemplateAssociation",
              "request": "text",
              "param": {
                "fields": "string"
              },
              "response": "buildType",
              "name": "PUT"
            },
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "buildType",
              "id": "serveBuildTypeTemplate"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/template"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/triggers",
          "actions": [
            {
              "response": "trigger",
              "name": "POST",
              "param": {
                "fields": "string"
              },
              "request": "trigger",
              "doc": "Creates new trigger. 'id' attribute is ignored in the submitted descriptor. Reports error if new trigger cannot be created (e.g. only single trigger of the type is allowed for a build configuration).",
              "id": "addTrigger"
            },
            {
              "response": "triggers",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "getTriggers"
            },
            {
              "id": "replaceTriggers",
              "doc": "Replaces trigger with those sent inthe request.",
              "param": {
                "fields": "string"
              },
              "request": "triggers",
              "response": "triggers",
              "name": "PUT"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/triggers/{triggerLocator}",
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteTrigger"
            },
            {
              "response": "trigger",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "getTrigger"
            },
            {
              "name": "PUT",
              "response": "trigger",
              "param": {
                "fields": "string"
              },
              "request": "trigger",
              "id": "replaceTrigger"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/triggers/{triggerLocator}/{fieldName}",
          "actions": [
            {
              "request": "text",
              "response": "text",
              "name": "PUT",
              "id": "changeTriggerSetting"
            },
            {
              "id": "getTriggerSetting",
              "response": "text",
              "name": "GET"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-entries",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "request": "vcs-root-entry",
              "name": "POST",
              "response": "vcs-root-entry",
              "id": "addVcsRootEntry"
            },
            {
              "param": {
                "fields": "string"
              },
              "response": "vcs-root-entries",
              "name": "GET",
              "id": "getVcsRootEntries"
            },
            {
              "request": "vcs-root-entries",
              "param": {
                "fields": "string"
              },
              "name": "PUT",
              "response": "vcs-root-entries",
              "id": "replaceVcsRootEntries"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "deleteVcsRootEntry",
              "name": "DELETE"
            },
            {
              "id": "getVcsRootEntry",
              "param": {
                "fields": "string"
              },
              "response": "vcs-root-entry",
              "name": "GET"
            },
            {
              "param": {
                "fields": "string"
              },
              "request": "vcs-root-entry",
              "response": "vcs-root-entry",
              "name": "PUT",
              "id": "updateVcsRootEntry"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-entries/{id}"
        },
        {
          "actions": [
            {
              "id": "getVcsRootEntryCheckoutRules",
              "response": "text",
              "name": "GET"
            },
            {
              "id": "updateVcsRootEntryCheckoutRules",
              "request": "text",
              "response": "text",
              "name": "PUT"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-entries/{id}/checkout-rules"
        },
        {
          "actions": [
            {
              "response": "vcs-root-instances",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "doc": "Experimental support only!",
              "id": "getCurrentVcsInstances"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs-root-instances"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs/files/latest/children{path:(/.*)?}",
          "actions": [
            {
              "doc": "Lists files in VCS Experimental support only",
              "id": "getVcsFileListing",
              "name": "GET",
              "response": "files",
              "param": {
                "fields": "string",
                "resolveParameters": "boolean"
              }
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs/files/latest/content{path:(/.*)?}",
          "actions": [
            {
              "param": {
                "resolveParameters": "boolean"
              },
              "name": "GET",
              "response": "any",
              "id": "getVcsFileContent",
              "doc": "Gets content of a file form VCS Experimental support only"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcs/files/latest/metadata{path:(/.*)?}",
          "actions": [
            {
              "id": "getVcsFile",
              "doc": "Gets VCS file details Experimental support only",
              "param": {
                "resolveParameters": "boolean"
              },
              "name": "GET",
              "response": "file"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/vcsLabeling",
          "actions": [
            {
              "doc": "Gets VCS labeling settings Experimental support only",
              "id": "getVCSLabelingOptions",
              "response": "vcsLabeling",
              "name": "GET"
            },
            {
              "id": "setVCSLabelingOptions",
              "doc": "Sets VCS labeling settings Experimental support only",
              "request": "vcsLabeling",
              "response": "vcsLabeling",
              "name": "PUT"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveBuildTypeField",
              "name": "GET",
              "response": "text"
            },
            {
              "request": "text",
              "name": "PUT",
              "response": "text",
              "id": "setBuildTypeField"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/buildTypes/{btLocator}/{field}"
        }
      ]
    },
    {
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds",
          "actions": [
            {
              "id": "deleteBuilds",
              "param": {
                "locator": "string"
              },
              "name": "DELETE"
            },
            {
              "id": "serveAllBuilds",
              "doc": "Serves builds matching supplied condition.",
              "param": {
                "count": "int",
                "includePersonal": "boolean",
                "triggeredByUser": "string",
                "sinceDate": "string",
                "start": "long",
                "buildType": "string",
                "sinceBuild": "string",
                "includeCanceled": "boolean",
                "status": "string",
                "locator": "string",
                "fields": "string",
                "tag": "string",
                "onlyPinned": "boolean",
                "agentName": "string"
              },
              "response": "builds",
              "name": "GET"
            }
          ]
        },
        {
          "actions": [
            {
              "response": "build",
              "name": "POST",
              "param": {
                "fields": "string"
              },
              "request": "buildCancelRequest",
              "id": "cancelBuild"
            },
            {
              "id": "deleteBuild",
              "name": "DELETE"
            },
            {
              "doc": "Serves a build described by the locator provided searching through those accessible by the current user. See {@link jetbrains.buildServer.server.rest.request.BuildRequest#serveAllBuilds(String, String, String, boolean, boolean, boolean, java.util.List, String, String, String, Long, Integer, String, javax.ws.rs.core.UriInfo, javax.servlet.http.HttpServletRequest)} If several builds are matched, the first one is used (the effect is the same as if \",count:1\" locator dimension is added)",
              "id": "serveBuild",
              "response": "build",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/archived{path:(/.*)?}",
          "actions": [
            {
              "response": "any",
              "name": "GET",
              "param": {
                "logBuildUsage": "boolean",
                "locator": "string",
                "resolveParameters": "boolean",
                "name": "string"
              },
              "doc": "Experimental",
              "id": "getZippedArtifacts"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/children{path:(/.*)?}",
          "actions": [
            {
              "id": "getArtifactChildren",
              "response": "files",
              "name": "GET",
              "param": {
                "resolveParameters": "boolean",
                "locator": "string",
                "fields": "string"
              }
            }
          ]
        },
        {
          "actions": [
            {
              "param": {
                "logBuildUsage": "boolean",
                "resolveParameters": "boolean"
              },
              "name": "GET",
              "response": "any",
              "id": "getArtifactContent"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/content{path:(/.*)?}"
        },
        {
          "actions": [
            {
              "response": "any",
              "name": "GET",
              "id": "getArtifactFilesContent"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/files{path:(/.*)?}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts/metadata{path:(/.*)?}",
          "actions": [
            {
              "id": "getArtifactMetadata",
              "param": {
                "resolveParameters": "boolean",
                "locator": "string"
              },
              "name": "GET",
              "response": "file"
            }
          ]
        },
        {
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "getArtifactsDirectory",
              "doc": "Experimental support only"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifactsDirectory"
        },
        {
          "actions": [
            {
              "name": "GET",
              "response": "files",
              "param": {
                "locator": "string",
                "fields": "string",
                "resolveParameters": "boolean"
              },
              "doc": "More user-friendly URL for \"/{buildLocator}/artifacts/children\" one.",
              "id": "getArtifacts"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/artifacts{path:(/.*)?}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/canceledInfo",
          "actions": [
            {
              "id": "getCanceledInfo",
              "param": {
                "fields": "string"
              },
              "response": "comment",
              "name": "GET"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/comment",
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteComment"
            },
            {
              "id": "replaceComment",
              "name": "PUT",
              "request": "text"
            }
          ]
        },
        {
          "actions": [
            {
              "name": "GET",
              "response": "buildCancelRequest",
              "id": "cancelBuild"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/example/buildCancelRequest"
        },
        {
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "getPinned",
              "doc": "Fetches current build pinned status."
            },
            {
              "id": "pinBuild",
              "doc": "Pins a build",
              "request": "text",
              "name": "PUT"
            },
            {
              "id": "unpinBuild",
              "doc": "Unpins a build",
              "request": "text",
              "name": "DELETE"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/pin/"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/problemOccurrences",
          "actions": [
            {
              "response": "problemOccurrences",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "getProblems"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveBuildRelatedIssuesOld",
              "response": "issuesUsages",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/related-issues"
        },
        {
          "actions": [
            {
              "response": "issuesUsages",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "serveBuildRelatedIssues"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/relatedIssues"
        },
        {
          "actions": [
            {
              "id": "serveBuildActualParameters",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "properties"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/resulting-properties/"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/resulting-properties/{propertyName}",
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "getParameter"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveSourceFile",
              "response": "any",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/sources/files/{fileName:.+}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/statistics/",
          "actions": [
            {
              "id": "serveBuildStatisticValues",
              "param": {
                "fields": "string"
              },
              "response": "properties",
              "name": "GET"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveBuildStatisticValue",
              "response": "text",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/statistics/{name}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/statusIcon",
          "actions": [
            {
              "name": "GET",
              "response": "any",
              "id": "serveBuildStatusIcon"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "addTag",
              "doc": "Adds a single tag to a build",
              "request": "text",
              "response": "text",
              "name": "POST"
            },
            {
              "request": "tags",
              "name": "POST",
              "id": "addTags",
              "doc": "Adds a set of tags to a build"
            },
            {
              "doc": "Replaces the build's tags designated by the tags 'locator' to the set of tags passed.",
              "id": "replaceTags",
              "name": "PUT",
              "response": "tags",
              "request": "tags",
              "param": {
                "locator": "string",
                "fields": "string"
              }
            },
            {
              "id": "serveTags",
              "name": "GET",
              "response": "tags",
              "param": {
                "fields": "string",
                "locator": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/tags/"
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "response": "testOccurrences",
              "name": "GET",
              "id": "getTests"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/testOccurrences"
        },
        {
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "serveBuildFieldByBuildOnly"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/builds/{buildLocator}/{field}"
        }
      ],
      "name": "builds"
    },
    {
      "name": "cctray",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/cctray",
          "actions": [
            {
              "param": {
                "locator": "string"
              },
              "name": "GET",
              "response": "Projects",
              "id": "serveProjectsConvenienceCopy"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveProjects",
              "name": "GET",
              "response": "Projects",
              "param": {
                "locator": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/cctray/projects.xml"
        }
      ]
    },
    {
      "name": "changes",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes",
          "actions": [
            {
              "name": "GET",
              "response": "changes",
              "param": {
                "count": "int",
                "vcsRoot": "string",
                "buildType": "string",
                "start": "long",
                "sinceChange": "string",
                "fields": "string",
                "locator": "string",
                "build": "string",
                "project": "string"
              },
              "doc": "Lists changes by the specified locator",
              "id": "serveChanges"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "change",
              "id": "serveChange"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/attributes",
          "actions": [
            {
              "doc": "Experimental support only!",
              "id": "getChangeAttributes",
              "response": "entries",
              "name": "GET"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/buildTypes",
          "actions": [
            {
              "doc": "Experimental support only!",
              "id": "getRelatedBuildTypes",
              "name": "GET",
              "response": "buildTypes",
              "param": {
                "fields": "string"
              }
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/duplicates",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "changes",
              "id": "getChangeDuplicates",
              "doc": "Experimental support only!"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/firstBuilds",
          "actions": [
            {
              "id": "getChangeFirstBuilds",
              "doc": "Experimental support only!",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "builds"
            }
          ]
        },
        {
          "actions": [
            {
              "response": "issues",
              "name": "GET",
              "doc": "Experimental support only!",
              "id": "getChangeIssue"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/issues"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/parentChanges",
          "actions": [
            {
              "id": "getParentChanges",
              "doc": "Experimental support only!",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "changes"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "getChangeParentRevisions",
              "doc": "Experimental support only!",
              "response": "items",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/parentRevisions"
        },
        {
          "actions": [
            {
              "id": "getChangeVCSRoot",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "vcs-root-instance"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/vcsRoot"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/vcsRootInstance",
          "actions": [
            {
              "id": "getChangeVCSRootInstance",
              "doc": "Experimental support only!",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "vcs-root-instance"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/changes/{changeLocator}/{field}",
          "actions": [
            {
              "name": "GET",
              "response": "text",
              "id": "getChangeField"
            }
          ]
        }
      ]
    },
    {
      "name": "debug",
      "resources": [
        {
          "actions": [
            {
              "id": "executeDBQuery",
              "response": "text",
              "name": "GET",
              "param": {
                "count": "int",
                "fieldDelimiter": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/debug/database/query/{query}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/debug/database/tables",
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "listDBTables"
            }
          ]
        },
        {
          "actions": [
            {
              "doc": "Experimental use only!",
              "id": "saveMemoryDump",
              "name": "POST",
              "response": "text",
              "param": {
                "archived": "boolean"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/debug/memory/dumps"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/debug/requestDetails",
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "getRequestDetails",
              "doc": "Experimental use only!"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "scheduleCheckingForChanges",
              "doc": "Experimental use only!",
              "param": {
                "lockedMonitors": "string",
                "lockedSynchronizers": "string"
              },
              "response": "text",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/debug/threadDump"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/debug/vcsCheckingForChangesQueue",
          "actions": [
            {
              "name": "POST",
              "response": "vcs-root-instances",
              "param": {
                "locator": "string",
                "fields": "string"
              },
              "doc": "Experimental use only!",
              "id": "scheduleCheckingForChanges"
            }
          ]
        }
      ]
    },
    {
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/info",
          "actions": [
            {
              "id": "servePluginInfo",
              "param": {
                "fields": "string"
              },
              "response": "plugin",
              "name": "GET"
            }
          ]
        }
      ],
      "name": "info"
    },
    {
      "name": "investigations",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/investigations",
          "actions": [
            {
              "name": "GET",
              "response": "investigations",
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "doc": "Experimental, the requests and results returned will change in future versions!",
              "id": "getInvestigations"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveInstance",
              "param": {
                "fields": "string"
              },
              "response": "investigation",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/investigations/{investigationLocator}"
        }
      ]
    },
    {
      "resources": [
        {
          "actions": [
            {
              "id": "getProblems",
              "doc": "Experimental, the requests and results returned will change in future versions!",
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "name": "GET",
              "response": "problemOccurrences"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/problemOccurrences"
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "response": "problemOccurrence",
              "name": "GET",
              "id": "serveInstance"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/problemOccurrences/{problemLocator}"
        }
      ],
      "name": "problemOccurrences"
    },
    {
      "name": "problems",
      "resources": [
        {
          "actions": [
            {
              "id": "getProblems",
              "doc": "Experimental, the requests and results returned will change in future versions!",
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "response": "problems",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/problems"
        },
        {
          "actions": [
            {
              "id": "serveInstance",
              "name": "GET",
              "response": "problem",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/problems/{problemLocator}"
        }
      ]
    },
    {
      "name": "projects",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects",
          "actions": [
            {
              "response": "project",
              "name": "POST",
              "request": "text",
              "id": "createEmptyProject"
            },
            {
              "request": "newProjectDescription",
              "response": "project",
              "name": "POST",
              "id": "createProject"
            },
            {
              "param": {
                "fields": "string"
              },
              "response": "projects",
              "name": "GET",
              "id": "serveProjects"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}",
          "actions": [
            {
              "id": "deleteProject",
              "name": "DELETE"
            },
            {
              "name": "GET",
              "response": "project",
              "param": {
                "fields": "string"
              },
              "id": "serveProject"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/agentPools",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "response": "agentPools",
              "name": "GET",
              "id": "getProjectAgentPools"
            },
            {
              "id": "setProjectAgentPools",
              "name": "PUT",
              "response": "agentPools",
              "param": {
                "fields": "string"
              },
              "request": "agentPools"
            },
            {
              "id": "setProjectAgentPools",
              "response": "agentPool",
              "name": "POST",
              "request": "agentPool"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "deleteProjectAgentPools",
              "name": "DELETE"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/agentPools/{agentPoolLocator}"
        },
        {
          "actions": [
            {
              "doc": "Creates a new build configuration by copying existing one.",
              "id": "createBuildType",
              "response": "buildType",
              "name": "POST",
              "request": "newBuildTypeDescription",
              "param": {
                "fields": "string"
              }
            },
            {
              "param": {
                "fields": "string"
              },
              "request": "text",
              "name": "POST",
              "response": "buildType",
              "id": "createEmptyBuildType"
            },
            {
              "id": "serveBuildTypesInProject",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "buildTypes"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes"
        },
        {
          "actions": [
            {
              "id": "serveBuildType",
              "response": "buildType",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds",
          "actions": [
            {
              "param": {
                "agentName": "string",
                "tag": "string",
                "onlyPinned": "boolean",
                "status": "string",
                "locator": "string",
                "fields": "string",
                "includeCanceled": "boolean",
                "sinceBuild": "string",
                "sinceDate": "string",
                "start": "long",
                "triggeredByUser": "string",
                "count": "int",
                "includePersonal": "boolean"
              },
              "response": "builds",
              "name": "GET",
              "id": "serveBuilds",
              "doc": "Serves builds matching supplied condition."
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds/{buildLocator}",
          "actions": [
            {
              "id": "serveBuildWithProject",
              "param": {
                "fields": "string"
              },
              "response": "build",
              "name": "GET"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/builds/{buildLocator}/{field}",
          "actions": [
            {
              "id": "serveBuildFieldWithProject",
              "response": "text",
              "name": "GET"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/buildTypes/{btLocator}/{field}",
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "serveBuildTypeFieldWithProject"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/example/newProjectDescription",
          "actions": [
            {
              "doc": "Experimental support only. Use this to get an example of the bean to be posted to the /projects request to create a new project",
              "id": "getExampleNewProjectDescription",
              "name": "GET",
              "response": "newProjectDescription",
              "param": {
                "id": "string"
              }
            }
          ]
        },
        {
          "actions": [
            {
              "id": "getExampleNewProjectDescriptionCompatibilityVersion1",
              "doc": "For compatibility with experimental feature of 8.0",
              "param": {
                "id": "string"
              },
              "response": "newProjectDescription",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/newProjectDescription"
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "request": "properties",
              "response": "properties",
              "name": "PUT",
              "id": "changeAllParameters"
            },
            {
              "name": "DELETE",
              "id": "deleteAllParameters"
            },
            {
              "response": "properties",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "serveParameters"
            },
            {
              "request": "property",
              "name": "POST",
              "response": "property",
              "id": "setParameter"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parameters"
        },
        {
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteParameter"
            },
            {
              "response": "property",
              "name": "GET",
              "id": "getParameter"
            },
            {
              "name": "GET",
              "response": "text",
              "id": "getParameterValue"
            },
            {
              "response": "text",
              "name": "PUT",
              "request": "text",
              "id": "putParameter"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parameters/{name}"
        },
        {
          "actions": [
            {
              "id": "getParameterValueLong",
              "response": "text",
              "name": "GET"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parameters/{name}/value"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/parentProject",
          "actions": [
            {
              "id": "getParentProject",
              "name": "GET",
              "response": "project",
              "param": {
                "fields": "string"
              }
            },
            {
              "id": "setParentProject",
              "request": "project",
              "name": "PUT",
              "response": "project"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/settingsFile",
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "doc": "Experimental support only",
              "id": "getSettingsFile"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/templates",
          "actions": [
            {
              "name": "POST",
              "response": "buildType",
              "param": {
                "fields": "string"
              },
              "request": "newBuildTypeDescription",
              "doc": "Creates a new build configuration template by copying existing one.",
              "id": "createBuildTypeTemplate"
            },
            {
              "id": "createEmptyBuildTypeTemplate",
              "request": "text",
              "param": {
                "fields": "string"
              },
              "response": "buildType",
              "name": "POST"
            },
            {
              "param": {
                "fields": "string"
              },
              "response": "buildTypes",
              "name": "GET",
              "id": "serveTemplatesInProject"
            }
          ]
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "buildType",
              "id": "serveBuildTypeTemplates"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/templates/{btLocator}"
        },
        {
          "actions": [
            {
              "id": "serveProjectField",
              "response": "text",
              "name": "GET"
            },
            {
              "id": "setProjectFiled",
              "request": "text",
              "response": "text",
              "name": "PUT"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/projects/{projectLocator}/{field}"
        }
      ]
    },
    {
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/server",
          "actions": [
            {
              "id": "serveServerInfo",
              "name": "GET",
              "response": "server"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "getBackupStatus",
              "response": "text",
              "name": "GET"
            },
            {
              "id": "startBackup",
              "param": {
                "addTimestamp": "boolean",
                "includeDatabase": "boolean",
                "includeBuildLogs": "boolean",
                "includePersonalChanges": "boolean",
                "includeSupplimentaryData": "boolean",
                "includeConfigs": "boolean",
                "includeRunningBuilds": "boolean",
                "fileName": "string"
              },
              "response": "text",
              "name": "POST"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/server/backup"
        },
        {
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "response": "plugins",
              "name": "GET",
              "id": "servePlugins"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/server/plugins"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/server/{field}",
          "actions": [
            {
              "name": "GET",
              "response": "text",
              "id": "serveServerVersion"
            }
          ]
        }
      ],
      "name": "server"
    },
    {
      "name": "testOccurrences",
      "resources": [
        {
          "actions": [
            {
              "response": "testOccurrences",
              "name": "GET",
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "doc": "Experimental, the requests and results returned will change in future versions!",
              "id": "getTestOccurrences"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/testOccurrences"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/testOccurrences/{testLocator}",
          "actions": [
            {
              "name": "GET",
              "response": "testOccurrence",
              "param": {
                "fields": "string"
              },
              "id": "serveInstance"
            }
          ]
        }
      ]
    },
    {
      "name": "tests",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/tests",
          "actions": [
            {
              "doc": "Experimental, the requests and results returned will change in future versions!",
              "id": "getTests",
              "name": "GET",
              "response": "tests",
              "param": {
                "fields": "string",
                "locator": "string"
              }
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/tests/{testLocator}",
          "actions": [
            {
              "response": "test",
              "name": "GET",
              "param": {
                "fields": "string"
              },
              "id": "serveInstance"
            }
          ]
        }
      ]
    },
    {
      "name": "userGroups",
      "resources": [
        {
          "actions": [
            {
              "name": "POST",
              "response": "group",
              "param": {
                "fields": "string"
              },
              "request": "group",
              "id": "addGroup"
            },
            {
              "id": "serveGroups",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "groups"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/userGroups"
        },
        {
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteGroup"
            },
            {
              "id": "serveGroup",
              "response": "group",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/properties",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "response": "properties",
              "name": "GET",
              "id": "getProperties"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/properties/{name}",
          "actions": [
            {
              "response": "text",
              "name": "PUT",
              "request": "text",
              "id": "putUserProperty"
            },
            {
              "name": "DELETE",
              "id": "removeUserProperty"
            },
            {
              "name": "GET",
              "response": "text",
              "id": "serveUserProperties"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/roles",
          "actions": [
            {
              "id": "addRole",
              "name": "POST",
              "response": "role",
              "request": "role"
            },
            {
              "id": "addRolePut",
              "response": "roles",
              "name": "PUT",
              "request": "roles"
            },
            {
              "id": "listRoles",
              "name": "GET",
              "response": "roles"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "addRoleSimple",
              "name": "POST",
              "response": "role"
            },
            {
              "id": "deleteRole",
              "name": "DELETE"
            },
            {
              "name": "GET",
              "response": "role",
              "id": "listRole"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/userGroups/{groupLocator}/roles/{roleId}/{scope}"
        }
      ]
    },
    {
      "name": "users",
      "resources": [
        {
          "actions": [
            {
              "id": "createUser",
              "param": {
                "fields": "string"
              },
              "request": "user",
              "response": "user",
              "name": "POST"
            },
            {
              "id": "serveUsers",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "users"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/users"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/users/{userLocator}",
          "actions": [
            {
              "id": "deleteUser",
              "name": "DELETE"
            },
            {
              "id": "serveUser",
              "param": {
                "fields": "string"
              },
              "response": "user",
              "name": "GET"
            },
            {
              "response": "user",
              "name": "PUT",
              "request": "user",
              "param": {
                "fields": "string"
              },
              "id": "updateUser"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/groups",
          "actions": [
            {
              "id": "addGroup",
              "param": {
                "fields": "string"
              },
              "request": "group",
              "name": "POST",
              "response": "group"
            },
            {
              "name": "GET",
              "response": "groups",
              "param": {
                "fields": "string"
              },
              "id": "getGroups"
            },
            {
              "id": "replaceGroups",
              "doc": "Replaces user's roles with the submitted ones",
              "request": "groups",
              "param": {
                "fields": "string"
              },
              "response": "groups",
              "name": "PUT"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/properties",
          "actions": [
            {
              "id": "serveUserProperties",
              "name": "GET",
              "response": "properties",
              "param": {
                "fields": "string"
              }
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/properties/{name}",
          "actions": [
            {
              "name": "PUT",
              "response": "text",
              "request": "text",
              "id": "putUserProperty"
            },
            {
              "name": "DELETE",
              "id": "removeUserProperty"
            },
            {
              "name": "GET",
              "response": "text",
              "id": "serveUserProperty"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/roles",
          "actions": [
            {
              "id": "addRole",
              "response": "role",
              "name": "POST",
              "request": "role"
            },
            {
              "id": "listRoles",
              "name": "GET",
              "response": "roles"
            },
            {
              "doc": "Replaces user's roles with the submitted ones",
              "id": "replaceRoles",
              "name": "PUT",
              "response": "roles",
              "request": "roles"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/roles/{roleId}/{scope}",
          "actions": [
            {
              "name": "PUT",
              "response": "role",
              "id": "addRoleSimple"
            },
            {
              "id": "addRoleSimplePost",
              "name": "POST"
            },
            {
              "name": "DELETE",
              "id": "deleteRole"
            },
            {
              "name": "GET",
              "response": "role",
              "id": "listRole"
            }
          ]
        },
        {
          "actions": [
            {
              "name": "GET",
              "response": "text",
              "id": "serveUserField"
            },
            {
              "id": "setUserField",
              "response": "text",
              "name": "PUT",
              "request": "text"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/users/{userLocator}/{field}"
        }
      ]
    },
    {
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances",
          "actions": [
            {
              "response": "vcs-root-instances",
              "name": "GET",
              "param": {
                "fields": "string",
                "locator": "string"
              },
              "id": "serveInstances"
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveInstance",
              "name": "GET",
              "response": "vcs-root-instance",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/children{path:(/.*)?}",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "files",
              "id": "getVcsFileListing",
              "doc": "Lists files in VCS Experimental support only"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/content{path:(/.*)?}",
          "actions": [
            {
              "doc": "Gets content of a file form VCS Experimental support only",
              "id": "getVcsFileContent",
              "response": "any",
              "name": "GET"
            }
          ]
        },
        {
          "actions": [
            {
              "response": "file",
              "name": "GET",
              "id": "getVcsFile",
              "doc": "Gets VCS file details Experimental support only"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/files/latest/metadata{path:(/.*)?}"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/properties",
          "actions": [
            {
              "id": "serveRootInstanceProperties",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "properties"
            }
          ]
        },
        {
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteRepositoryState"
            },
            {
              "response": "entries",
              "name": "GET",
              "id": "getRepositoryState"
            },
            {
              "id": "setRepositoryState",
              "name": "PUT",
              "response": "entries",
              "request": "entries"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/repositoryState"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/repositoryState/creationDate",
          "actions": [
            {
              "id": "getRepositoryStateCreationDate",
              "response": "any",
              "name": "GET"
            }
          ]
        },
        {
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteInstanceField"
            },
            {
              "id": "serveInstanceField",
              "name": "GET",
              "response": "text"
            },
            {
              "id": "setInstanceField",
              "request": "text",
              "response": "text",
              "name": "PUT"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-root-instances/{vcsRootInstanceLocator}/{field}"
        }
      ],
      "name": "vcs-root-instances"
    },
    {
      "resources": [
        {
          "actions": [
            {
              "name": "POST",
              "response": "vcs-root",
              "param": {
                "fields": "string"
              },
              "request": "vcs-root",
              "id": "addRoot"
            },
            {
              "name": "GET",
              "response": "vcs-roots",
              "param": {
                "locator": "string",
                "fields": "string"
              },
              "id": "serveRoots"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots"
        },
        {
          "actions": [
            {
              "id": "deleteRoot",
              "name": "DELETE"
            },
            {
              "id": "serveRoot",
              "name": "GET",
              "response": "vcs-root",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}"
        },
        {
          "actions": [
            {
              "id": "serveRootInstances",
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "vcs-root-instances"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}",
          "actions": [
            {
              "param": {
                "fields": "string"
              },
              "name": "GET",
              "response": "vcs-root-instance",
              "id": "serveRootInstance"
            }
          ]
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}/properties",
          "actions": [
            {
              "id": "serveRootInstanceProperties",
              "response": "properties",
              "name": "GET",
              "param": {
                "fields": "string"
              }
            }
          ]
        },
        {
          "actions": [
            {
              "id": "serveInstanceField",
              "name": "GET",
              "response": "text"
            },
            {
              "response": "text",
              "name": "PUT",
              "request": "text",
              "id": "setInstanceField"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/instances/{vcsRootInstanceLocator}/{field}"
        },
        {
          "actions": [
            {
              "response": "properties",
              "name": "PUT",
              "request": "properties",
              "param": {
                "fields": "string"
              },
              "id": "changeProperties"
            },
            {
              "id": "deleteAllProperties",
              "name": "DELETE"
            },
            {
              "id": "serveProperties",
              "name": "GET",
              "response": "properties",
              "param": {
                "fields": "string"
              }
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/properties"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/properties/{name}",
          "actions": [
            {
              "name": "DELETE",
              "id": "deleteParameter"
            },
            {
              "id": "putParameter",
              "request": "text",
              "response": "text",
              "name": "PUT"
            },
            {
              "response": "text",
              "name": "GET",
              "id": "serveProperty"
            }
          ]
        },
        {
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "doc": "Experimental support only",
              "id": "getSettingsFile"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/settingsFile"
        },
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/vcs-roots/{vcsRootLocator}/{field}",
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "serveField"
            },
            {
              "request": "text",
              "response": "text",
              "name": "PUT",
              "id": "setField"
            }
          ]
        }
      ],
      "name": "vcs-roots"
    },
    {
      "name": "version",
      "resources": [
        {
          "uri": "http://tc.maxmind.com:8111/app/rest/version",
          "actions": [
            {
              "id": "serveVersion",
              "response": "text",
              "name": "GET"
            }
          ]
        }
      ]
    },
    {
      "resources": [
        {
          "actions": [
            {
              "response": "text",
              "name": "GET",
              "id": "serveBuildFieldShort"
            }
          ],
          "uri": "http://tc.maxmind.com:8111/app/rest/{projectLocator}/{btLocator}/{buildLocator}/{field}"
        }
      ],
      "name": "{projectLocator}"
    }
  ],
  "typemap": {
    "step": {
      "name": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      },
      "type": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "properties": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1,
        "from": "propEntity"
      },
      "disabled": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "boolean"
      },
      "id": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      }
    },
    "parameterType": {
      "rawValue": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "investigation": {
      "resolution": {
        "type": "resolution",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "state": {
        "type": "string",
        "is_attribute": 1
      },
      "target": {
        "is_sequence": 1,
        "type": "problemTarget",
        "minOccurs": "0"
      },
      "responsible": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "user"
      },
      "assignee": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "user"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "scope": {
        "is_sequence": 1,
        "type": "problemScope",
        "minOccurs": "0"
      },
      "assignment": {
        "type": "comment",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "buildType": {
      "description": {
        "is_attribute": 1,
        "type": "string"
      },
      "features": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "snapshot-dependencies": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "steps": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "triggers": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "investigations": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "uuid": {
        "is_attribute": 1,
        "type": "string"
      },
      "builds": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "projectName": {
        "type": "string",
        "is_attribute": 1
      },
      "projectInternalId": {
        "type": "string",
        "is_attribute": 1
      },
      "locator": {
        "type": "string",
        "is_attribute": 1
      },
      "project": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "settings": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "projectId": {
        "is_attribute": 1,
        "type": "string"
      },
      "agent-requirements": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "vcs-root-entries": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "parameters": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "properties"
      },
      "template": {
        "type": "buildType",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "internalId": {
        "type": "string",
        "is_attribute": 1
      },
      "templateFlag": {
        "type": "boolean",
        "is_attribute": 1
      },
      "paused": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "artifact-dependencies": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "investigations": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "investigation": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "comment": {
      "timestamp": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "text": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      }
    },
    "copyOptionsDescription": {
      "projectsIdsMap": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "vcsRootsIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "copyAllAssociatedSettings": {
        "type": "boolean",
        "is_attribute": 1
      },
      "buildTypesIdsMap": {
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "problem": {
      "investigations": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "identity": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "problemOccurrences": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "mutes": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "triggeredBy": {
      "buildType": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "date": {
        "is_attribute": 1,
        "type": "string"
      },
      "user": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "rawValue": {
        "is_attribute": 1,
        "type": "string"
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "details": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "branch": {
      "unspecified": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "default": {
        "type": "boolean",
        "is_attribute": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "role": {
      "roleId": {
        "type": "string",
        "is_attribute": 1
      },
      "scope": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "branches": {
      "branch": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      }
    },
    "files": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "file": {
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "items": {
      "item": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      }
    },
    "tests": {
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "test": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "user": {
      "properties": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "roles": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "email": {
        "is_attribute": 1,
        "type": "string"
      },
      "username": {
        "type": "string",
        "is_attribute": 1
      },
      "lastLogin": {
        "type": "string",
        "is_attribute": 1
      },
      "groups": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "password": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      },
      "realm": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "vcs-root": {
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "projectLocator": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsName": {
        "is_attribute": 1,
        "type": "string"
      },
      "project": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "vcsRootInstances": {
        "type": "vcs-root-instances",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "lastChecked": {
        "is_attribute": 1,
        "type": "string"
      },
      "uuid": {
        "is_attribute": 1,
        "type": "string"
      },
      "internalId": {
        "type": "long",
        "is_attribute": 1
      },
      "modificationCheckInterval": {
        "is_attribute": 1,
        "type": "int"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "agent-requirements": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "agent-requirement": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "problemOccurrences": {
      "newFailed": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "problemOccurrence": {
        "is_ref": 1,
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "passed": {
        "type": "int",
        "from": "occurrencesSummary",
        "is_attribute": 1
      },
      "failed": {
        "type": "int",
        "from": "occurrencesSummary",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "muted": {
        "is_attribute": 1,
        "from": "occurrencesSummary",
        "type": "int"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "ignored": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "newBuildTypeDescription": {
      "sourceBuildTypeLocator": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsRootsIdsMap": {
        "from": "copyOptionsDescription",
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "sourceBuildType": {
        "type": "buildType",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "copyAllAssociatedSettings": {
        "type": "boolean",
        "is_attribute": 1,
        "from": "copyOptionsDescription"
      },
      "buildTypesIdsMap": {
        "from": "copyOptionsDescription",
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "projectsIdsMap": {
        "from": "copyOptionsDescription",
        "type": "properties",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "tag": {
      "private": {
        "type": "boolean",
        "is_attribute": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "owner": {
        "type": "user",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "project": {
      "parentProjectInternalId": {
        "type": "string",
        "is_attribute": 1
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "parameters": {
        "is_sequence": 1,
        "type": "properties",
        "minOccurs": "0"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "internalId": {
        "type": "string",
        "is_attribute": 1
      },
      "projects": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "webUrl": {
        "type": "string",
        "is_attribute": 1
      },
      "locator": {
        "type": "string",
        "is_attribute": 1
      },
      "templates": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "buildTypes"
      },
      "parentProjectId": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsRoots": {
        "is_sequence": 1,
        "type": "vcs-roots",
        "minOccurs": "0"
      },
      "parentProjectName": {
        "is_attribute": 1,
        "type": "string"
      },
      "archived": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "uuid": {
        "is_attribute": 1,
        "type": "string"
      },
      "description": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildTypes": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "parentProject": {
        "type": "project",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "resolution": {
      "type": {
        "type": "string",
        "is_attribute": 1
      },
      "time": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      }
    },
    "agent-requirement": {
      "id": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "disabled": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "boolean"
      },
      "properties": {
        "is_ref": 1,
        "from": "propEntity",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "type": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "name": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      }
    },
    "revisions": {
      "revision": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "type": "revision",
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "snapshot-dependency": {
      "name": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "type": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "source-buildType": {
        "minOccurs": "0",
        "type": "buildType",
        "is_sequence": 1
      },
      "properties": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1,
        "from": "propEntity"
      },
      "disabled": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "boolean"
      },
      "id": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      }
    },
    "problemTarget": {
      "anyProblem": {
        "type": "boolean",
        "is_attribute": 1
      },
      "problems": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "tests": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      }
    },
    "plugins": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "plugin": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "vcsLabeling": {
      "vcsRoots": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "vcs-roots"
      },
      "type": {
        "type": "string",
        "is_attribute": 1
      },
      "branchFilter": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "labelName": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "mute": {
      "resolution": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "resolution"
      },
      "target": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "problemTarget"
      },
      "id": {
        "type": "int",
        "is_attribute": 1
      },
      "scope": {
        "type": "problemScope",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "assignment": {
        "is_sequence": 1,
        "type": "comment",
        "minOccurs": "0"
      }
    },
    "file-ref": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "agent": {
      "pool": {
        "minOccurs": "0",
        "type": "agentPool",
        "is_sequence": 1
      },
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "connected": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "typeId": {
        "type": "int",
        "is_attribute": 1
      },
      "enabled": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "ip": {
        "type": "string",
        "is_attribute": 1
      },
      "authorized": {
        "type": "boolean",
        "is_attribute": 1
      },
      "id": {
        "type": "int",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "uptodate": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "vcs-root-instances": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "vcs-root-instance": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "properties": {
      "property": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "snapshot-dependencies": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "snapshot-dependency": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      }
    },
    "roles": {
      "role": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      }
    },
    "features": {
      "feature": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "fileChange": {
      "after-revision": {
        "is_attribute": 1,
        "type": "string"
      },
      "relative-file": {
        "type": "string",
        "is_attribute": 1
      },
      "file": {
        "is_attribute": 1,
        "type": "string"
      },
      "before-revision": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "vcs-root-entry": {
      "vcs-root": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "checkout-rules": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "problemOccurrence": {
      "mute": {
        "minOccurs": "0",
        "type": "mute",
        "is_sequence": 1
      },
      "problem": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "currentlyMuted": {
        "type": "boolean",
        "is_attribute": 1
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "details": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "build": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "muted": {
        "type": "boolean",
        "is_attribute": 1
      },
      "type": {
        "type": "string",
        "is_attribute": 1
      },
      "identity": {
        "is_attribute": 1,
        "type": "string"
      },
      "additionalData": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "currentlyInvestigated": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "artifact-dependencies": {
      "artifact-dependency": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "groups": {
      "group": {
        "is_ref": 1,
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "feature": {
      "properties": {
        "from": "propEntity",
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "name": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "type": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "string"
      },
      "id": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "disabled": {
        "type": "boolean",
        "is_attribute": 1,
        "from": "propEntity"
      }
    },
    "propEntity": {
      "disabled": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "type": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      }
    },
    "buildTriggeringOptions": {
      "rebuildDependencies": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "buildTypes"
      },
      "queueAtTop": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "rebuildAllDependencies": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "cleanSources": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "server": {
      "currentTime": {
        "type": "string",
        "is_attribute": 1
      },
      "users": {
        "minOccurs": "0",
        "type": "href",
        "is_sequence": 1
      },
      "vcsRoots": {
        "type": "href",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "versionMinor": {
        "is_attribute": 1,
        "type": "byte"
      },
      "userGroups": {
        "minOccurs": "0",
        "type": "href",
        "is_sequence": 1
      },
      "agentPools": {
        "type": "href",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "buildNumber": {
        "type": "string",
        "is_attribute": 1
      },
      "buildQueue": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "href"
      },
      "versionMajor": {
        "is_attribute": 1,
        "type": "byte"
      },
      "buildDate": {
        "is_attribute": 1,
        "type": "string"
      },
      "version": {
        "type": "string",
        "is_attribute": 1
      },
      "internalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "projects": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "startTime": {
        "is_attribute": 1,
        "type": "string"
      },
      "builds": {
        "type": "href",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "agents": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "href"
      }
    },
    "agents": {
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "agent": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "file": {
      "parent": {
        "type": "file-ref",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "name": {
        "type": "string",
        "is_attribute": 1,
        "from": "file-ref"
      },
      "content": {
        "minOccurs": "0",
        "type": "href",
        "is_sequence": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1,
        "from": "file-ref"
      },
      "size": {
        "is_attribute": 1,
        "type": "long"
      },
      "children": {
        "is_sequence": 1,
        "type": "href",
        "minOccurs": "0"
      },
      "modificationTime": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "progress-info": {
      "estimatedTotalSeconds": {
        "is_attribute": 1,
        "type": "long"
      },
      "outdated": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "probablyHanging": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "elapsedSeconds": {
        "type": "long",
        "is_attribute": 1
      },
      "currentStageText": {
        "is_attribute": 1,
        "type": "string"
      },
      "percentageComplete": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "trigger": {
      "id": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "disabled": {
        "type": "boolean",
        "from": "propEntity",
        "is_attribute": 1
      },
      "properties": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1,
        "from": "propEntity"
      },
      "name": {
        "type": "string",
        "from": "propEntity",
        "is_attribute": 1
      },
      "type": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      }
    },
    "occurrencesSummary": {
      "muted": {
        "type": "int",
        "is_attribute": 1
      },
      "ignored": {
        "is_attribute": 1,
        "type": "int"
      },
      "failed": {
        "type": "int",
        "is_attribute": 1
      },
      "passed": {
        "type": "int",
        "is_attribute": 1
      },
      "newFailed": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "builds": {
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "build": {
        "is_ref": 1,
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "artifact-dependency": {
      "id": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      },
      "disabled": {
        "is_attribute": 1,
        "from": "propEntity",
        "type": "boolean"
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "from": "propEntity",
        "is_ref": 1
      },
      "source-buildType": {
        "minOccurs": "0",
        "type": "buildType",
        "is_sequence": 1
      },
      "type": {
        "type": "string",
        "is_attribute": 1,
        "from": "propEntity"
      },
      "name": {
        "from": "propEntity",
        "is_attribute": 1,
        "type": "string"
      }
    },
    "steps": {
      "step": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "vcs-roots": {
      "vcs-root": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "plugin": {
      "parameters": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "properties"
      },
      "loadPath": {
        "type": "string",
        "is_attribute": 1
      },
      "displayName": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "version": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "issueUsage": {
      "changes": {
        "is_sequence": 1,
        "type": "changes",
        "minOccurs": "0"
      },
      "issue": {
        "is_sequence": 1,
        "type": "issue",
        "minOccurs": "0"
      }
    },
    "href": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "build": {
      "personal": {
        "type": "boolean",
        "is_attribute": 1
      },
      "agent": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "running": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "canceledInfo": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "comment"
      },
      "tags": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "startEstimate": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      },
      "snapshot-dependencies": {
        "is_sequence": 1,
        "type": "builds",
        "minOccurs": "0"
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "compatibleAgents": {
        "is_sequence": 1,
        "type": "agents",
        "minOccurs": "0"
      },
      "buildTypeInternalId": {
        "type": "string",
        "is_attribute": 1
      },
      "waitReason": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "triggered": {
        "minOccurs": "0",
        "type": "triggeredBy",
        "is_sequence": 1
      },
      "webUrl": {
        "is_attribute": 1,
        "type": "string"
      },
      "artifact-dependencies": {
        "type": "builds",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "running-info": {
        "minOccurs": "0",
        "type": "progress-info",
        "is_sequence": 1
      },
      "number": {
        "type": "string",
        "is_attribute": 1
      },
      "relatedIssues": {
        "type": "issuesUsages",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "statistics": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "properties"
      },
      "defaultBranch": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "unspecifiedBranch": {
        "type": "boolean",
        "is_attribute": 1
      },
      "locator": {
        "type": "string",
        "is_attribute": 1
      },
      "pinned": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "triggeringOptions": {
        "type": "buildTriggeringOptions",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "comment": {
        "minOccurs": "0",
        "type": "comment",
        "is_sequence": 1
      },
      "custom-artifact-dependencies": {
        "type": "artifact-dependencies",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "statusText": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "percentageComplete": {
        "type": "int",
        "is_attribute": 1
      },
      "buildType": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "branchName": {
        "type": "string",
        "is_attribute": 1
      },
      "finishDate": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      },
      "artifacts": {
        "minOccurs": "0",
        "type": "files",
        "is_sequence": 1
      },
      "buildTypeId": {
        "type": "string",
        "is_attribute": 1
      },
      "changes": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "history": {
        "type": "boolean",
        "is_attribute": 1
      },
      "queuedDate": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      },
      "pinInfo": {
        "minOccurs": "0",
        "type": "comment",
        "is_sequence": 1
      },
      "status": {
        "is_attribute": 1,
        "type": "string"
      },
      "lastChanges": {
        "minOccurs": "0",
        "type": "changes",
        "is_sequence": 1
      },
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "taskId": {
        "type": "long",
        "is_attribute": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "long"
      },
      "testOccurrences": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "problemOccurrences": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "attributes": {
        "minOccurs": "0",
        "type": "entries",
        "is_sequence": 1
      },
      "state": {
        "type": "string",
        "is_attribute": 1
      },
      "revisions": {
        "is_sequence": 1,
        "type": "revisions",
        "minOccurs": "0"
      },
      "startDate": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "xs:string"
      }
    },
    "changes": {
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "change": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      }
    },
    "mutes": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "mute": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "type": "mute",
        "minOccurs": "0"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "entries": {
      "count": {
        "is_attribute": 1,
        "type": "long"
      },
      "entry": {
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "minOccurs": "0",
        "is_ref": 1
      }
    },
    "buildTypes": {
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildType": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "testOccurrence": {
      "mute": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "mute"
      },
      "currentlyMuted": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "ignored": {
        "type": "boolean",
        "is_attribute": 1
      },
      "nextFixed": {
        "type": "testOccurrence",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "duration": {
        "is_attribute": 1,
        "type": "int"
      },
      "test": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "muted": {
        "type": "boolean",
        "is_attribute": 1
      },
      "build": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "ignoreDetails": {
        "type": "xs:string",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "firstFailed": {
        "is_sequence": 1,
        "type": "testOccurrence",
        "minOccurs": "0"
      },
      "status": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "details": {
        "minOccurs": "0",
        "type": "xs:string",
        "is_sequence": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "string"
      },
      "currentlyInvestigated": {
        "type": "boolean",
        "is_attribute": 1
      }
    },
    "change": {
      "locator": {
        "is_attribute": 1,
        "type": "string"
      },
      "files": {
        "type": "fileChanges",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "vcsRootInstance": {
        "minOccurs": "0",
        "type": "vcs-root-instance",
        "is_sequence": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "date": {
        "type": "string",
        "is_attribute": 1
      },
      "id": {
        "is_attribute": 1,
        "type": "long"
      },
      "webUrl": {
        "is_attribute": 1,
        "type": "string"
      },
      "username": {
        "type": "string",
        "is_attribute": 1
      },
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "personal": {
        "type": "boolean",
        "is_attribute": 1
      },
      "comment": {
        "is_sequence": 1,
        "type": "xs:string",
        "minOccurs": "0"
      },
      "version": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "issuesUsages": {
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "issueUsage": {
        "minOccurs": "0",
        "type": "issueUsage",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "testOccurrences": {
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "testOccurrence": {
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "ignored": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "muted": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "newFailed": {
        "from": "occurrencesSummary",
        "is_attribute": 1,
        "type": "int"
      },
      "passed": {
        "type": "int",
        "is_attribute": 1,
        "from": "occurrencesSummary"
      },
      "failed": {
        "type": "int",
        "from": "occurrencesSummary",
        "is_attribute": 1
      }
    },
    "fileChanges": {
      "file": {
        "minOccurs": "0",
        "type": "fileChange",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      }
    },
    "group": {
      "description": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "roles": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "parent-groups": {
        "type": "groups",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "users": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "key": {
        "type": "string",
        "is_attribute": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "child-groups": {
        "type": "groups",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "vcs-root-instance": {
      "status": {
        "type": "string",
        "is_attribute": 1
      },
      "lastVersion": {
        "is_attribute": 1,
        "type": "string"
      },
      "properties": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "lastVersionInternal": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsName": {
        "type": "string",
        "is_attribute": 1
      },
      "projectLocator": {
        "type": "string",
        "is_attribute": 1
      },
      "vcs-root": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "lastChecked": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsRootInternalId": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcs-root-id": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "agentPool": {
      "id": {
        "type": "int",
        "is_attribute": 1
      },
      "locator": {
        "type": "string",
        "is_attribute": 1
      },
      "agents": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "projects": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "users": {
      "user": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      }
    },
    "triggers": {
      "trigger": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "revision": {
      "internalVersion": {
        "type": "string",
        "is_attribute": 1
      },
      "version": {
        "is_attribute": 1,
        "type": "string"
      },
      "vcs-root-instance": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      }
    },
    "test": {
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "mutes": {
        "is_sequence": 1,
        "minOccurs": "0",
        "is_ref": 1
      },
      "investigations": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "testOccurrences": {
        "is_ref": 1,
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "id": {
        "type": "long",
        "is_attribute": 1
      }
    },
    "tags": {
      "tag": {
        "is_ref": 1,
        "minOccurs": "0",
        "maxOccurs": "unbounded",
        "is_sequence": 1
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "agentPools": {
      "agentPool": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "href": {
        "type": "string",
        "is_attribute": 1
      },
      "nextHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "count": {
        "type": "int",
        "is_attribute": 1
      }
    },
    "entry": {
      "value": {
        "is_attribute": 1,
        "type": "string"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "projects": {
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "href": {
        "is_attribute": 1,
        "type": "string"
      },
      "prevHref": {
        "type": "string",
        "is_attribute": 1
      },
      "project": {
        "minOccurs": "0",
        "is_sequence": 1,
        "maxOccurs": "unbounded",
        "is_ref": 1
      }
    },
    "problems": {
      "prevHref": {
        "is_attribute": 1,
        "type": "string"
      },
      "problem": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      },
      "count": {
        "is_attribute": 1,
        "type": "int"
      },
      "nextHref": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "vcs-root-entries": {
      "count": {
        "type": "int",
        "is_attribute": 1
      },
      "vcs-root-entry": {
        "is_ref": 1,
        "maxOccurs": "unbounded",
        "is_sequence": 1,
        "minOccurs": "0"
      }
    },
    "property": {
      "own": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "name": {
        "type": "string",
        "is_attribute": 1
      },
      "type": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "parameterType"
      },
      "value": {
        "is_attribute": 1,
        "type": "string"
      }
    },
    "problemScope": {
      "buildType": {
        "minOccurs": "0",
        "is_sequence": 1,
        "is_ref": 1
      },
      "project": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      },
      "buildTypes": {
        "is_ref": 1,
        "minOccurs": "0",
        "is_sequence": 1
      }
    },
    "buildCancelRequest": {
      "readdIntoQueue": {
        "is_attribute": 1,
        "type": "boolean"
      },
      "comment": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "newProjectDescription": {
      "sourceProject": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "project"
      },
      "projectsIdsMap": {
        "minOccurs": "0",
        "type": "properties",
        "is_sequence": 1,
        "from": "copyOptionsDescription"
      },
      "name": {
        "is_attribute": 1,
        "type": "string"
      },
      "buildTypesIdsMap": {
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "properties",
        "from": "copyOptionsDescription"
      },
      "sourceProjectLocator": {
        "is_attribute": 1,
        "type": "string"
      },
      "copyAllAssociatedSettings": {
        "type": "boolean",
        "from": "copyOptionsDescription",
        "is_attribute": 1
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      },
      "vcsRootsIdsMap": {
        "from": "copyOptionsDescription",
        "minOccurs": "0",
        "is_sequence": 1,
        "type": "properties"
      },
      "parentProject": {
        "is_sequence": 1,
        "type": "project",
        "minOccurs": "0"
      }
    },
    "issue": {
      "url": {
        "is_attribute": 1,
        "type": "string"
      },
      "id": {
        "type": "string",
        "is_attribute": 1
      }
    },
    "issues": {
      "issue": {
        "minOccurs": "0",
        "type": "issue",
        "is_sequence": 1,
        "maxOccurs": "unbounded"
      }
    }
  },
  "base_uri": "http://tc.maxmind.com:8111/app/rest"
}
